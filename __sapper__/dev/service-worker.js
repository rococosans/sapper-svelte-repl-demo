(function () {
	'use strict';

	// This file is generated by Sapper â€” do not edit it!
	const timestamp = 1570323820716;

	const files = [
		"service-worker-index.html",
		"contributors.jpg",
		"examples/thumbnails/7guis-circles.jpg",
		"examples/thumbnails/7guis-counter.jpg",
		"examples/thumbnails/7guis-crud.jpg",
		"examples/thumbnails/7guis-flight-booker.jpg",
		"examples/thumbnails/7guis-temperature.jpg",
		"examples/thumbnails/7guis-timer.jpg",
		"examples/thumbnails/actions.jpg",
		"examples/thumbnails/adding-parameters-to-actions.jpg",
		"examples/thumbnails/adding-parameters-to-transitions.jpg",
		"examples/thumbnails/animate.jpg",
		"examples/thumbnails/area-chart.jpg",
		"examples/thumbnails/auto-subscriptions.jpg",
		"examples/thumbnails/await-blocks.jpg",
		"examples/thumbnails/bar-chart.jpg",
		"examples/thumbnails/bind-this.jpg",
		"examples/thumbnails/checkbox-inputs.jpg",
		"examples/thumbnails/class-shorthand.jpg",
		"examples/thumbnails/classes.jpg",
		"examples/thumbnails/clock.jpg",
		"examples/thumbnails/component-bindings.jpg",
		"examples/thumbnails/component-events.jpg",
		"examples/thumbnails/context-api.jpg",
		"examples/thumbnails/custom-css-transitions.jpg",
		"examples/thumbnails/custom-js-transitions.jpg",
		"examples/thumbnails/custom-stores.jpg",
		"examples/thumbnails/debug.jpg",
		"examples/thumbnails/declaring-props.jpg",
		"examples/thumbnails/default-values.jpg",
		"examples/thumbnails/deferred-transitions.jpg",
		"examples/thumbnails/derived-stores.jpg",
		"examples/thumbnails/dimensions.jpg",
		"examples/thumbnails/dom-event-forwarding.jpg",
		"examples/thumbnails/dom-events.jpg",
		"examples/thumbnails/dynamic-attributes.jpg",
		"examples/thumbnails/each-block-bindings.jpg",
		"examples/thumbnails/each-blocks.jpg",
		"examples/thumbnails/easing.jpg",
		"examples/thumbnails/else-blocks.jpg",
		"examples/thumbnails/else-if-blocks.jpg",
		"examples/thumbnails/event-forwarding.jpg",
		"examples/thumbnails/event-modifiers.jpg",
		"examples/thumbnails/group-inputs.jpg",
		"examples/thumbnails/hacker-news.jpg",
		"examples/thumbnails/hello-world.jpg",
		"examples/thumbnails/html-tags.jpg",
		"examples/thumbnails/if-blocks.jpg",
		"examples/thumbnails/immutable-data.jpg",
		"examples/thumbnails/in-and-out.jpg",
		"examples/thumbnails/inline-handlers.jpg",
		"examples/thumbnails/keyed-each-blocks.jpg",
		"examples/thumbnails/media-elements.jpg",
		"examples/thumbnails/modal.jpg",
		"examples/thumbnails/module-exports.jpg",
		"examples/thumbnails/multiple-select-bindings.jpg",
		"examples/thumbnails/named-slots.jpg",
		"examples/thumbnails/nested-components.jpg",
		"examples/thumbnails/numeric-inputs.jpg",
		"examples/thumbnails/ondestroy.jpg",
		"examples/thumbnails/onmount.jpg",
		"examples/thumbnails/reactive-assignments.jpg",
		"examples/thumbnails/reactive-declarations.jpg",
		"examples/thumbnails/reactive-statements.jpg",
		"examples/thumbnails/readable-stores.jpg",
		"examples/thumbnails/scatterplot.jpg",
		"examples/thumbnails/select-bindings.jpg",
		"examples/thumbnails/sharing-code.jpg",
		"examples/thumbnails/slot-fallbacks.jpg",
		"examples/thumbnails/slot-props.jpg",
		"examples/thumbnails/slots.jpg",
		"examples/thumbnails/spread-props.jpg",
		"examples/thumbnails/spring.jpg",
		"examples/thumbnails/styling.jpg",
		"examples/thumbnails/svelte-body.jpg",
		"examples/thumbnails/svelte-component.jpg",
		"examples/thumbnails/svelte-head.jpg",
		"examples/thumbnails/svelte-self.jpg",
		"examples/thumbnails/svelte-window-bindings.jpg",
		"examples/thumbnails/svelte-window.jpg",
		"examples/thumbnails/svg-transitions.jpg",
		"examples/thumbnails/text-inputs.jpg",
		"examples/thumbnails/textarea-inputs.jpg",
		"examples/thumbnails/tick.jpg",
		"examples/thumbnails/transition-events.jpg",
		"examples/thumbnails/transition.jpg",
		"examples/thumbnails/tweened.jpg",
		"examples/thumbnails/update.jpg",
		"examples/thumbnails/writable-stores.jpg",
		"favicon.ico",
		"favicon.png",
		"fonts/fira-mono/fira-mono-latin-400.woff2",
		"fonts/overpass/overpass-latin-100.woff2",
		"fonts/overpass/overpass-latin-300.woff2",
		"fonts/overpass/overpass-latin-400.woff2",
		"fonts/overpass/overpass-latin-600.woff2",
		"fonts/overpass/overpass-latin-700.woff2",
		"fonts/roboto/roboto-latin-400.woff2",
		"fonts/roboto/roboto-latin-400italic.woff2",
		"fonts/roboto/roboto-latin-500.woff2",
		"fonts/roboto/roboto-latin-500italic.woff2",
		"global.css",
		"icons/arrow-right.svg",
		"icons/check.svg",
		"icons/chevron.svg",
		"icons/collapse.svg",
		"icons/download.svg",
		"icons/dropdown.svg",
		"icons/edit.svg",
		"icons/expand.svg",
		"icons/flip.svg",
		"icons/fork.svg",
		"icons/link.svg",
		"icons/loading.svg",
		"icons/save.svg",
		"images/svelte-android-chrome-192.png",
		"images/svelte-android-chrome-512.png",
		"images/svelte-apple-touch-icon.png",
		"images/svelte-mstile-150.png",
		"images/twitter-card.png",
		"logo-mask.svg",
		"manifest.json",
		"media/rethinking-best-practices.jpg",
		"organisations/bekchy.png",
		"organisations/beyonk.svg",
		"organisations/buydotstar.svg",
		"organisations/chess.svg",
		"organisations/comigo.svg",
		"organisations/datawrapper.svg",
		"organisations/dbnomics.jpg",
		"organisations/dbnomics.webp",
		"organisations/deck.svg",
		"organisations/dextra.png",
		"organisations/entriwise.png",
		"organisations/from-now-on.png",
		"organisations/fusioncharts.svg",
		"organisations/godaddy.svg",
		"organisations/grainger.svg",
		"organisations/healthtree.png",
		"organisations/itslearning.svg",
		"organisations/metrovias.svg",
		"organisations/mustlab.png",
		"organisations/nesta.svg",
		"organisations/nonkosi.svg",
		"organisations/nyt.svg",
		"organisations/nzz.svg",
		"organisations/oberonspace.svg",
		"organisations/ofof.png",
		"organisations/open-state-foundation.svg",
		"organisations/panascais.svg",
		"organisations/pankod.svg",
		"organisations/razorpay.svg",
		"organisations/socialist-party.svg",
		"organisations/sqltribe.svg",
		"organisations/stone.svg",
		"organisations/strixcloud.svg",
		"organisations/sucuri.png",
		"organisations/thunderdome.svg",
		"organisations/tokopedia.svg",
		"organisations/webdesq.svg",
		"organisations/zevvle.svg",
		"prism.css",
		"svelte-app.json",
		"svelte-logo-horizontal.svg",
		"svelte-logo-mask.svg",
		"svelte-logo-outline.svg",
		"svelte-logo-vertical.svg",
		"svelte-logo.svg",
		"svelte-logotype.svg",
		"tutorial/dark-theme.css",
		"tutorial/icons/email.svg",
		"tutorial/icons/folder-open.svg",
		"tutorial/icons/folder.svg",
		"tutorial/icons/gif.svg",
		"tutorial/icons/map-marker.svg",
		"tutorial/icons/md.svg",
		"tutorial/icons/xlsx.svg",
		"tutorial/image.gif",
		"tutorial/kitten.png",
		"workers/bundler.js",
		"workers/compiler.js"
	];

	const shell = [
		"client/client.79f07f1e.js",
		"client/index.121aa0ed.js",
		"client/index.ab7b6b80.js",
		"client/app.688aaf8d.js",
		"client/Repl.d20fb43b.js",
		"client/examples.83e383fd.js",
		"client/InputOutputToggle.cf880272.js",
		"client/ReplWidget.21faec58.js",
		"client/index.cdfcf57c.js",
		"client/_layout.8314ed23.js",
		"client/index.5a89353a.js",
		"client/config.305e0082.js",
		"client/index.0a978f10.js",
		"client/navigation.84703ebc.js",
		"client/index.ca5ce752.js",
		"client/index.636d6a22.js",
		"client/index.c51ff286.js",
		"client/embed.889ba2f8.js",
		"client/index.54131cc1.js",
		"client/sapper-dev-client.89e34bae.js",
		"client/codemirror.5ce01cfa.js"
	];

	const ASSETS = `cache${timestamp}`;

	// `shell` is an array of all the files generated by Rollup,
	// `files` is an array of everything in the `static` directory
	const to_cache = shell.concat(files.filter(file => {
		const basename = file.split('/').pop();
		if (basename[0] === '.') return false; // .DS_Store and friends
		if (basename.endsWith('.mp3')) return false; // TODO others?
		return true;
	}));
	const cached = new Set(to_cache);

	self.addEventListener('install', event => {
		event.waitUntil(
			caches
				.open(ASSETS)
				.then(cache => cache.addAll(to_cache))
				.then(() => {
					self.skipWaiting();
				})
		);
	});

	self.addEventListener('activate', event => {
		event.waitUntil(
			caches.keys().then(async keys => {
				// delete old caches
				for (const key of keys) {
					if (key !== ASSETS) await caches.delete(key);
				}

				self.clients.claim();
			})
		);
	});

	self.addEventListener('fetch', event => {
		if (event.request.method !== 'GET' || event.request.headers.has('range')) return;

		const url = new URL(event.request.url);

		// don't try to handle e.g. data: URIs
		if (!url.protocol.startsWith('http')) return;

		// ignore dev server requests
		if (url.hostname === self.location.hostname && url.port !== self.location.port) return;

		// always serve static files and Rollup-generated assets from cache
		if (url.host === self.location.host && cached.has(url.pathname)) {
			event.respondWith(caches.match(event.request));
			return;
		}

		// for pages, you might want to serve a shell `index.html` file,
		// which Sapper has generated for you. It's not right for every
		// app, but if it's right for yours then uncomment this section
		/*
		if (url.origin === self.origin && routes.find(route => route.pattern.test(url.pathname))) {
			event.respondWith(caches.match('/index.html'));
			return;
		}
		*/

		if (event.request.cache === 'only-if-cached') return;

		// for everything else, try the network first, falling back to
		// cache if the user is offline. (If the pages never change, you
		// might prefer a cache-first approach to a network-first one.)
		event.respondWith(
			caches
				.open(`offline${timestamp}`)
				.then(async cache => {
					try {
						const response = await fetch(event.request);
						cache.put(event.request, response.clone());
						return response;
					} catch (err) {
						const response = await cache.match(event.request);
						if (response) return response;

						throw err;
					}
				})
		);
	});

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
