import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, c as create_slot, h as element, k as claim_element, l as children, m as detach_dev, o as attr_dev, p as add_location, q as insert_dev, f as space, w as empty, j as claim_space, v as append_dev, g as get_slot_changes, a as get_slot_context, t as transition_in, b as transition_out, H as binding_callbacks, I as createEventDispatcher, G as getContext, J as toggle_class, E as group_outros, F as check_outros, K as add_render_callback, L as create_in_transition, M as create_out_transition, r as text, u as claim_text, N as listen_dev, x as set_data_dev, n as noop, O as onMount, P as set_style, A as mount_component, D as destroy_component, Q as add_resize_listener, R as prop_dev, e as globals, T as subscribe, U as validate_store, V as component_subscribe, W as svg_element, X as destroy_each, Y as run_all, Z as set_store_value, _ as set_input_value, $ as null_to_empty, a0 as bind, a1 as add_flush_callback, z as setContext } from './index.121aa0ed.js';
import { w as writable } from './index.ab7b6b80.js';

function clamp(num, min, max) {
    return num < min ? min : num > max ? max : num;
}

/* node_modules\@sveltejs\svelte-repl\src\SplitPane.svelte generated by Svelte v3.12.0 */

const file = "node_modules\\@sveltejs\\svelte-repl\\src\\SplitPane.svelte";

const get_b_slot_changes = () => ({});
const get_b_slot_context = () => ({});

const get_a_slot_changes = () => ({});
const get_a_slot_context = () => ({});

// (157:1) {#if !fixed}
function create_if_block_1(ctx) {
	var div, div_class_value, div_style_value, drag_action;

	const block = {
		c: function create() {
			div = element("div");
			this.h();
		},

		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true, style: true }, false);
			var div_nodes = children(div);

			div_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(div, "class", div_class_value = "" + ctx.type + " divider" + " svelte-zr3pp4");
			attr_dev(div, "style", div_style_value = "" + ctx.side + ": calc(" + ctx.pos + "% - 8px)");
			add_location(div, file, 157, 2, 2723);
		},

		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			drag_action = ctx.drag.call(null, div, ctx.setPos) || {};
		},

		p: function update(changed, ctx) {
			if ((changed.type) && div_class_value !== (div_class_value = "" + ctx.type + " divider" + " svelte-zr3pp4")) {
				attr_dev(div, "class", div_class_value);
			}

			if ((changed.side || changed.pos) && div_style_value !== (div_style_value = "" + ctx.side + ": calc(" + ctx.pos + "% - 8px)")) {
				attr_dev(div, "style", div_style_value);
			}
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(div);
			}

			if (drag_action && typeof drag_action.destroy === 'function') drag_action.destroy();
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block_1.name, type: "if", source: "(157:1) {#if !fixed}", ctx });
	return block;
}

// (162:0) {#if dragging}
function create_if_block(ctx) {
	var div;

	const block = {
		c: function create() {
			div = element("div");
			this.h();
		},

		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true }, false);
			var div_nodes = children(div);

			div_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(div, "class", "mousecatcher svelte-zr3pp4");
			add_location(div, file, 162, 1, 2842);
		},

		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(div);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block.name, type: "if", source: "(162:0) {#if dragging}", ctx });
	return block;
}

function create_fragment(ctx) {
	var div2, div0, div0_style_value, t0, div1, div1_style_value, t1, t2, if_block1_anchor, current;

	const a_slot_template = ctx.$$slots.a;
	const a_slot = create_slot(a_slot_template, ctx, get_a_slot_context);

	const b_slot_template = ctx.$$slots.b;
	const b_slot = create_slot(b_slot_template, ctx, get_b_slot_context);

	var if_block0 = (!ctx.fixed) && create_if_block_1(ctx);

	var if_block1 = (ctx.dragging) && create_if_block(ctx);

	const block = {
		c: function create() {
			div2 = element("div");
			div0 = element("div");

			if (a_slot) a_slot.c();
			t0 = space();
			div1 = element("div");

			if (b_slot) b_slot.c();
			t1 = space();
			if (if_block0) if_block0.c();
			t2 = space();
			if (if_block1) if_block1.c();
			if_block1_anchor = empty();
			this.h();
		},

		l: function claim(nodes) {
			div2 = claim_element(nodes, "DIV", { class: true }, false);
			var div2_nodes = children(div2);

			div0 = claim_element(div2_nodes, "DIV", { class: true, style: true }, false);
			var div0_nodes = children(div0);

			if (a_slot) a_slot.l(div0_nodes);
			div0_nodes.forEach(detach_dev);
			t0 = claim_space(div2_nodes);

			div1 = claim_element(div2_nodes, "DIV", { class: true, style: true }, false);
			var div1_nodes = children(div1);

			if (b_slot) b_slot.l(div1_nodes);
			div1_nodes.forEach(detach_dev);
			t1 = claim_space(div2_nodes);
			if (if_block0) if_block0.l(div2_nodes);
			div2_nodes.forEach(detach_dev);
			t2 = claim_space(nodes);
			if (if_block1) if_block1.l(nodes);
			if_block1_anchor = empty();
			this.h();
		},

		h: function hydrate() {
			attr_dev(div0, "class", "pane svelte-zr3pp4");
			attr_dev(div0, "style", div0_style_value = "" + ctx.dimension + ": " + ctx.pos + "%;");
			add_location(div0, file, 148, 1, 2534);

			attr_dev(div1, "class", "pane svelte-zr3pp4");
			attr_dev(div1, "style", div1_style_value = "" + ctx.dimension + ": " + (100 - (ctx.pos)) + "%;");
			add_location(div1, file, 152, 1, 2617);
			attr_dev(div2, "class", "container svelte-zr3pp4");
			add_location(div2, file, 147, 0, 2482);
		},

		m: function mount(target, anchor) {
			insert_dev(target, div2, anchor);
			append_dev(div2, div0);

			if (a_slot) {
				a_slot.m(div0, null);
			}

			append_dev(div2, t0);
			append_dev(div2, div1);

			if (b_slot) {
				b_slot.m(div1, null);
			}

			append_dev(div2, t1);
			if (if_block0) if_block0.m(div2, null);
			ctx.div2_binding(div2);
			insert_dev(target, t2, anchor);
			if (if_block1) if_block1.m(target, anchor);
			insert_dev(target, if_block1_anchor, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			if (a_slot && a_slot.p && changed.$$scope) {
				a_slot.p(
					get_slot_changes(a_slot_template, ctx, changed, get_a_slot_changes),
					get_slot_context(a_slot_template, ctx, get_a_slot_context)
				);
			}

			if ((!current || changed.dimension || changed.pos) && div0_style_value !== (div0_style_value = "" + ctx.dimension + ": " + ctx.pos + "%;")) {
				attr_dev(div0, "style", div0_style_value);
			}

			if (b_slot && b_slot.p && changed.$$scope) {
				b_slot.p(
					get_slot_changes(b_slot_template, ctx, changed, get_b_slot_changes),
					get_slot_context(b_slot_template, ctx, get_b_slot_context)
				);
			}

			if ((!current || changed.dimension || changed.pos) && div1_style_value !== (div1_style_value = "" + ctx.dimension + ": " + (100 - (ctx.pos)) + "%;")) {
				attr_dev(div1, "style", div1_style_value);
			}

			if (!ctx.fixed) {
				if (if_block0) {
					if_block0.p(changed, ctx);
				} else {
					if_block0 = create_if_block_1(ctx);
					if_block0.c();
					if_block0.m(div2, null);
				}
			} else if (if_block0) {
				if_block0.d(1);
				if_block0 = null;
			}

			if (ctx.dragging) {
				if (!if_block1) {
					if_block1 = create_if_block(ctx);
					if_block1.c();
					if_block1.m(if_block1_anchor.parentNode, if_block1_anchor);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}
		},

		i: function intro(local) {
			if (current) return;
			transition_in(a_slot, local);
			transition_in(b_slot, local);
			current = true;
		},

		o: function outro(local) {
			transition_out(a_slot, local);
			transition_out(b_slot, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(div2);
			}

			if (a_slot) a_slot.d(detaching);

			if (b_slot) b_slot.d(detaching);
			if (if_block0) if_block0.d();
			ctx.div2_binding(null);

			if (detaching) {
				detach_dev(t2);
			}

			if (if_block1) if_block1.d(detaching);

			if (detaching) {
				detach_dev(if_block1_anchor);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment.name, type: "component", source: "", ctx });
	return block;
}

function instance($$self, $$props, $$invalidate) {
	

	const dispatch = createEventDispatcher();

	let { type, pos = 50, fixed = false, min = 50 } = $$props;
	// export let min1 = min;
	// export let min2 = min;

	const refs = {};

	let dragging = false;

	function setPos(event) {
		const { top, bottom, left, right } = refs.container.getBoundingClientRect();

		const extents = type === 'vertical' ? [top, bottom] : [left, right];

		const px = clamp(
			type === 'vertical' ? event.clientY : event.clientX,
			extents[0] + min,
			extents[1] - min
		);

		$$invalidate('pos', pos = 100 * (px - extents[0]) / (extents[1] - extents[0]));

		dispatch('change');
	}

	function drag(node, callback) {
		const mousedown = event => {
			if (event.which !== 1) return;

			event.preventDefault();

			$$invalidate('dragging', dragging = true);

			const onmouseup = () => {
				$$invalidate('dragging', dragging = false);

				window.removeEventListener('mousemove', callback, false);
				window.removeEventListener('mouseup', onmouseup, false);
			};

			window.addEventListener('mousemove', callback, false);
			window.addEventListener('mouseup', onmouseup, false);
		};

		node.addEventListener('mousedown', mousedown, false);

		return {
			destroy() {
				node.removeEventListener('mousedown', onmousedown, false);
			}
		};
	}

	const writable_props = ['type', 'pos', 'fixed', 'min'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<SplitPane> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;

	function div2_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			refs.container = $$value;
			$$invalidate('refs', refs);
		});
	}

	$$self.$set = $$props => {
		if ('type' in $$props) $$invalidate('type', type = $$props.type);
		if ('pos' in $$props) $$invalidate('pos', pos = $$props.pos);
		if ('fixed' in $$props) $$invalidate('fixed', fixed = $$props.fixed);
		if ('min' in $$props) $$invalidate('min', min = $$props.min);
		if ('$$scope' in $$props) $$invalidate('$$scope', $$scope = $$props.$$scope);
	};

	$$self.$capture_state = () => {
		return { type, pos, fixed, min, dragging, side, dimension };
	};

	$$self.$inject_state = $$props => {
		if ('type' in $$props) $$invalidate('type', type = $$props.type);
		if ('pos' in $$props) $$invalidate('pos', pos = $$props.pos);
		if ('fixed' in $$props) $$invalidate('fixed', fixed = $$props.fixed);
		if ('min' in $$props) $$invalidate('min', min = $$props.min);
		if ('dragging' in $$props) $$invalidate('dragging', dragging = $$props.dragging);
		if ('side' in $$props) $$invalidate('side', side = $$props.side);
		if ('dimension' in $$props) $$invalidate('dimension', dimension = $$props.dimension);
	};

	let side, dimension;

	$$self.$$.update = ($$dirty = { type: 1 }) => {
		if ($$dirty.type) { $$invalidate('side', side = type === 'horizontal' ? 'left' : 'top'); }
		if ($$dirty.type) { $$invalidate('dimension', dimension = type === 'horizontal' ? 'width' : 'height'); }
	};

	return {
		type,
		pos,
		fixed,
		min,
		refs,
		dragging,
		setPos,
		drag,
		side,
		dimension,
		div2_binding,
		$$slots,
		$$scope
	};
}

class SplitPane extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, ["type", "pos", "fixed", "min"]);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "SplitPane", options, id: create_fragment.name });

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.type === undefined && !('type' in props)) {
			console.warn("<SplitPane> was created without expected prop 'type'");
		}
	}

	get type() {
		throw new Error("<SplitPane>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set type(value) {
		throw new Error("<SplitPane>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get pos() {
		throw new Error("<SplitPane>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set pos(value) {
		throw new Error("<SplitPane>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get fixed() {
		throw new Error("<SplitPane>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set fixed(value) {
		throw new Error("<SplitPane>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get min() {
		throw new Error("<SplitPane>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set min(value) {
		throw new Error("<SplitPane>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

const is_browser = typeof window !== 'undefined';

function cubicOut(t) {
    const f = t - 1.0;
    return f * f * f + 1.0;
}

function slide(node, { delay = 0, duration = 400, easing = cubicOut }) {
    const style = getComputedStyle(node);
    const opacity = +style.opacity;
    const height = parseFloat(style.height);
    const padding_top = parseFloat(style.paddingTop);
    const padding_bottom = parseFloat(style.paddingBottom);
    const margin_top = parseFloat(style.marginTop);
    const margin_bottom = parseFloat(style.marginBottom);
    const border_top_width = parseFloat(style.borderTopWidth);
    const border_bottom_width = parseFloat(style.borderBottomWidth);
    return {
        delay,
        duration,
        easing,
        css: t => `overflow: hidden;` +
            `opacity: ${Math.min(t * 20, 1) * opacity};` +
            `height: ${t * height}px;` +
            `padding-top: ${t * padding_top}px;` +
            `padding-bottom: ${t * padding_bottom}px;` +
            `margin-top: ${t * margin_top}px;` +
            `margin-bottom: ${t * margin_bottom}px;` +
            `border-top-width: ${t * border_top_width}px;` +
            `border-bottom-width: ${t * border_bottom_width}px;`
    };
}

/* node_modules\@sveltejs\svelte-repl\src\Message.svelte generated by Svelte v3.12.0 */

const file$1 = "node_modules\\@sveltejs\\svelte-repl\\src\\Message.svelte";

// (88:1) {:else}
function create_else_block(ctx) {
	var current;

	const default_slot_template = ctx.$$slots.default;
	const default_slot = create_slot(default_slot_template, ctx, null);

	const block = {
		c: function create() {
			if (default_slot) default_slot.c();
		},

		l: function claim(nodes) {
			if (default_slot) default_slot.l(nodes);
		},

		m: function mount(target, anchor) {
			if (default_slot) {
				default_slot.m(target, anchor);
			}

			current = true;
		},

		p: function update(changed, ctx) {
			if (default_slot && default_slot.p && changed.$$scope) {
				default_slot.p(
					get_slot_changes(default_slot_template, ctx, changed, null),
					get_slot_context(default_slot_template, ctx, null)
				);
			}
		},

		i: function intro(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},

		o: function outro(local) {
			transition_out(default_slot, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (default_slot) default_slot.d(detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_else_block.name, type: "else", source: "(88:1) {:else}", ctx });
	return block;
}

// (83:1) {#if details}
function create_if_block$1(ctx) {
	var p, t_value = ctx.message(ctx.details) + "", t, dispose;

	const block = {
		c: function create() {
			p = element("p");
			t = text(t_value);
			this.h();
		},

		l: function claim(nodes) {
			p = claim_element(nodes, "P", { class: true }, false);
			var p_nodes = children(p);

			t = claim_text(p_nodes, t_value);
			p_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(p, "class", "svelte-1w07di8");
			toggle_class(p, "navigable", ctx.details.filename);
			add_location(p, file$1, 83, 2, 1471);
			dispose = listen_dev(p, "click", ctx.click_handler);
		},

		m: function mount(target, anchor) {
			insert_dev(target, p, anchor);
			append_dev(p, t);
		},

		p: function update(changed, ctx) {
			if ((changed.details) && t_value !== (t_value = ctx.message(ctx.details) + "")) {
				set_data_dev(t, t_value);
			}

			if (changed.details) {
				toggle_class(p, "navigable", ctx.details.filename);
			}
		},

		i: noop,
		o: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(p);
			}

			dispose();
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block$1.name, type: "if", source: "(83:1) {#if details}", ctx });
	return block;
}

function create_fragment$1(ctx) {
	var div, current_block_type_index, if_block, div_class_value, div_intro, div_outro, current;

	var if_block_creators = [
		create_if_block$1,
		create_else_block
	];

	var if_blocks = [];

	function select_block_type(changed, ctx) {
		if (ctx.details) return 0;
		return 1;
	}

	current_block_type_index = select_block_type(null, ctx);
	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	const block = {
		c: function create() {
			div = element("div");
			if_block.c();
			this.h();
		},

		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true }, false);
			var div_nodes = children(div);

			if_block.l(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(div, "class", div_class_value = "message " + ctx.kind + " svelte-1w07di8");
			toggle_class(div, "truncate", ctx.truncate);
			add_location(div, file$1, 81, 0, 1343);
		},

		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			if_blocks[current_block_type_index].m(div, null);
			current = true;
		},

		p: function update(changed, ctx) {
			var previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(changed, ctx);
			if (current_block_type_index === previous_block_index) {
				if_blocks[current_block_type_index].p(changed, ctx);
			} else {
				group_outros();
				transition_out(if_blocks[previous_block_index], 1, 1, () => {
					if_blocks[previous_block_index] = null;
				});
				check_outros();

				if_block = if_blocks[current_block_type_index];
				if (!if_block) {
					if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
					if_block.c();
				}
				transition_in(if_block, 1);
				if_block.m(div, null);
			}

			if ((!current || changed.kind) && div_class_value !== (div_class_value = "message " + ctx.kind + " svelte-1w07di8")) {
				attr_dev(div, "class", div_class_value);
			}

			if ((changed.kind || changed.truncate)) {
				toggle_class(div, "truncate", ctx.truncate);
			}
		},

		i: function intro(local) {
			if (current) return;
			transition_in(if_block);

			add_render_callback(() => {
				if (div_outro) div_outro.end(1);
				if (!div_intro) div_intro = create_in_transition(div, slide, {delay: 150, duration: 100});
				div_intro.start();
			});

			current = true;
		},

		o: function outro(local) {
			transition_out(if_block);
			if (div_intro) div_intro.invalidate();

			div_outro = create_out_transition(div, slide, {duration: 100});

			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(div);
			}

			if_blocks[current_block_type_index].d();

			if (detaching) {
				if (div_outro) div_outro.end();
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment$1.name, type: "component", source: "", ctx });
	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	

	const { navigate } = getContext('REPL');

	let { kind, details = null, filename = null, truncate } = $$props;

	function message(details) {
		let str = details.message || '[missing message]';

		let loc = [];

		if (details.filename && details.filename !== filename) {
			loc.push(details.filename);
		}

		if (details.start) loc.push(details.start.line, details.start.column);

		return str + (loc.length ? ` (${loc.join(':')})` : ``);
	}
	const writable_props = ['kind', 'details', 'filename', 'truncate'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<Message> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;

	const click_handler = () => navigate(details);

	$$self.$set = $$props => {
		if ('kind' in $$props) $$invalidate('kind', kind = $$props.kind);
		if ('details' in $$props) $$invalidate('details', details = $$props.details);
		if ('filename' in $$props) $$invalidate('filename', filename = $$props.filename);
		if ('truncate' in $$props) $$invalidate('truncate', truncate = $$props.truncate);
		if ('$$scope' in $$props) $$invalidate('$$scope', $$scope = $$props.$$scope);
	};

	$$self.$capture_state = () => {
		return { kind, details, filename, truncate };
	};

	$$self.$inject_state = $$props => {
		if ('kind' in $$props) $$invalidate('kind', kind = $$props.kind);
		if ('details' in $$props) $$invalidate('details', details = $$props.details);
		if ('filename' in $$props) $$invalidate('filename', filename = $$props.filename);
		if ('truncate' in $$props) $$invalidate('truncate', truncate = $$props.truncate);
	};

	return {
		navigate,
		kind,
		details,
		filename,
		truncate,
		message,
		click_handler,
		$$slots,
		$$scope
	};
}

class Message extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, ["kind", "details", "filename", "truncate"]);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "Message", options, id: create_fragment$1.name });

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.kind === undefined && !('kind' in props)) {
			console.warn("<Message> was created without expected prop 'kind'");
		}
		if (ctx.truncate === undefined && !('truncate' in props)) {
			console.warn("<Message> was created without expected prop 'truncate'");
		}
	}

	get kind() {
		throw new Error("<Message>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set kind(value) {
		throw new Error("<Message>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get details() {
		throw new Error("<Message>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set details(value) {
		throw new Error("<Message>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get filename() {
		throw new Error("<Message>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set filename(value) {
		throw new Error("<Message>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get truncate() {
		throw new Error("<Message>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set truncate(value) {
		throw new Error("<Message>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* node_modules\@sveltejs\svelte-repl\src\CodeMirror.svelte generated by Svelte v3.12.0 */

const file$2 = "node_modules\\@sveltejs\\svelte-repl\\src\\CodeMirror.svelte";

// (273:1) {#if !CodeMirror}
function create_if_block$2(ctx) {
	var pre, t0, t1, div, current;

	var message = new Message({
		props: {
		kind: "info",
		$$slots: { default: [create_default_slot] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	const block = {
		c: function create() {
			pre = element("pre");
			t0 = text(ctx.code);
			t1 = space();
			div = element("div");
			message.$$.fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			pre = claim_element(nodes, "PRE", { style: true, class: true }, false);
			var pre_nodes = children(pre);

			t0 = claim_text(pre_nodes, ctx.code);
			pre_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);

			div = claim_element(nodes, "DIV", { style: true }, false);
			var div_nodes = children(div);

			message.$$.fragment.l(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			set_style(pre, "position", "absolute");
			set_style(pre, "left", "0");
			set_style(pre, "top", "0");
			attr_dev(pre, "class", "svelte-s9cc8a");
			add_location(pre, file$2, 273, 2, 5262);
			set_style(div, "position", "absolute");
			set_style(div, "width", "100%");
			set_style(div, "bottom", "0");
			add_location(div, file$2, 276, 2, 5330);
		},

		m: function mount(target, anchor) {
			insert_dev(target, pre, anchor);
			append_dev(pre, t0);
			insert_dev(target, t1, anchor);
			insert_dev(target, div, anchor);
			mount_component(message, div, null);
			current = true;
		},

		p: function update_1(changed, ctx) {
			if (!current || changed.code) {
				set_data_dev(t0, ctx.code);
			}

			var message_changes = {};
			if (changed.$$scope) message_changes.$$scope = { changed, ctx };
			message.$set(message_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(message.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(message.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(pre);
				detach_dev(t1);
				detach_dev(div);
			}

			destroy_component(message);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block$2.name, type: "if", source: "(273:1) {#if !CodeMirror}", ctx });
	return block;
}

// (278:3) <Message kind='info'>
function create_default_slot(ctx) {
	var t;

	const block = {
		c: function create() {
			t = text("loading editor...");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "loading editor...");
		},

		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(t);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_default_slot.name, type: "slot", source: "(278:3) <Message kind='info'>", ctx });
	return block;
}

function create_fragment$2(ctx) {
	var div, textarea, t, div_resize_listener, current;

	var if_block = (!ctx.CodeMirror) && create_if_block$2(ctx);

	const block = {
		c: function create() {
			div = element("div");
			textarea = element("textarea");
			t = space();
			if (if_block) if_block.c();
			this.h();
		},

		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true }, false);
			var div_nodes = children(div);

			textarea = claim_element(div_nodes, "TEXTAREA", { tabindex: true, readonly: true, value: true, class: true }, false);
			var textarea_nodes = children(textarea);

			textarea_nodes.forEach(detach_dev);
			t = claim_space(div_nodes);
			if (if_block) if_block.l(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(textarea, "tabindex", "2");
			textarea.readOnly = true;
			textarea.value = ctx.code;
			attr_dev(textarea, "class", "svelte-s9cc8a");
			add_location(textarea, file$2, 265, 1, 5149);
			add_render_callback(() => ctx.div_resize_handler.call(div));
			attr_dev(div, "class", "codemirror-container svelte-s9cc8a");
			toggle_class(div, "flex", ctx.flex);
			add_location(div, file$2, 263, 0, 5012);
		},

		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, textarea);
			ctx.textarea_binding(textarea);
			append_dev(div, t);
			if (if_block) if_block.m(div, null);
			div_resize_listener = add_resize_listener(div, ctx.div_resize_handler.bind(div));
			current = true;
		},

		p: function update_1(changed, ctx) {
			if (!current || changed.code) {
				prop_dev(textarea, "value", ctx.code);
			}

			if (!ctx.CodeMirror) {
				if (if_block) {
					if_block.p(changed, ctx);
					transition_in(if_block, 1);
				} else {
					if_block = create_if_block$2(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(div, null);
				}
			} else if (if_block) {
				group_outros();
				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});
				check_outros();
			}

			if (changed.flex) {
				toggle_class(div, "flex", ctx.flex);
			}
		},

		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},

		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(div);
			}

			ctx.textarea_binding(null);
			if (if_block) if_block.d();
			div_resize_listener.cancel();
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment$2.name, type: "component", source: "", ctx });
	return block;
}

let codemirror_promise;
let _CodeMirror;

if (is_browser) {
	codemirror_promise = import(/* webpackChunkName: "codemirror" */ './codemirror.5ce01cfa.js');

	codemirror_promise.then(mod => {
		_CodeMirror = mod.default;
	});
}

function sleep(ms) {
	return new Promise(fulfil => setTimeout(fulfil, ms));
}

function instance$2($$self, $$props, $$invalidate) {
	

	const dispatch = createEventDispatcher();
	const { navigate } = getContext('REPL');

	let { readonly = false, errorLoc = null, flex = false, lineNumbers = true, tab = true } = $$props;

	let w;
	let h;
	let code = '';
	let mode;

	// We have to expose set and update methods, rather
	// than making this state-driven through props,
	// because it's difficult to update an editor
	// without resetting scroll otherwise
	async function set(new_code, new_mode) {
		if (new_mode !== mode) {
			await createEditor(mode = new_mode);
		}

		$$invalidate('code', code = new_code);
		updating_externally = true;
		if (editor) editor.setValue(code);
		updating_externally = false;
	}

	function update(new_code) {
		$$invalidate('code', code = new_code);

		if (editor) {
			const { left, top } = editor.getScrollInfo();
			editor.setValue($$invalidate('code', code = new_code));
			editor.scrollTo(left, top);
		}
	}

	function resize() {
		editor.refresh();
	}

	function focus() {
		editor.focus();
	}

	const modes = {
		js: {
			name: 'javascript',
			json: false
		},
		json: {
			name: 'javascript',
			json: true
		},
		svelte: {
			name: 'handlebars',
			base: 'text/html'
		}
	};

	const refs = {};
	let editor;
	let updating_externally = false;
	let marker;
	let error_line;
	let destroyed = false;
	let CodeMirror;

	let previous_error_line;

	onMount(() => {
		if (_CodeMirror) {
			$$invalidate('CodeMirror', CodeMirror = _CodeMirror);
			createEditor(mode || 'svelte').then(() => {
				if (editor) editor.setValue(code || '');
			});
		} else {
			codemirror_promise.then(async mod => {
				$$invalidate('CodeMirror', CodeMirror = mod.default);
				await createEditor(mode || 'svelte');
				if (editor) editor.setValue(code || '');
			});
		}

		return () => {
			destroyed = true;
			if (editor) editor.toTextArea();
		}
	});

	let first = true;

	async function createEditor(mode) {
		if (destroyed || !CodeMirror) return;

		if (editor) editor.toTextArea();

		const opts = {
			lineNumbers,
			lineWrapping: true,
			indentWithTabs: true,
			indentUnit: 2,
			tabSize: 2,
			value: '',
			mode: modes[mode] || {
				name: mode
			},
			readOnly: readonly,
			autoCloseBrackets: true,
			autoCloseTags: true
		};

		if (!tab) opts.extraKeys = {
			Tab: tab,
			'Shift-Tab': tab
		};

		// Creating a text editor is a lot of work, so we yield
		// the main thread for a moment. This helps reduce jank
		if (first) await sleep(50);

		if (destroyed) return;

		$$invalidate('editor', editor = CodeMirror.fromTextArea(refs.editor, opts));

		editor.on('change', instance => {
			if (!updating_externally) {
				const value = instance.getValue();
				dispatch('change', { value });
			}
		});

		if (first) await sleep(50);
		editor.refresh();

		first = false;
	}

	const writable_props = ['readonly', 'errorLoc', 'flex', 'lineNumbers', 'tab'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<CodeMirror> was created with unknown prop '${key}'`);
	});

	function textarea_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			refs.editor = $$value;
			$$invalidate('refs', refs);
		});
	}

	function div_resize_handler() {
		w = this.offsetWidth;
		h = this.offsetHeight;
		$$invalidate('w', w);
		$$invalidate('h', h);
	}

	$$self.$set = $$props => {
		if ('readonly' in $$props) $$invalidate('readonly', readonly = $$props.readonly);
		if ('errorLoc' in $$props) $$invalidate('errorLoc', errorLoc = $$props.errorLoc);
		if ('flex' in $$props) $$invalidate('flex', flex = $$props.flex);
		if ('lineNumbers' in $$props) $$invalidate('lineNumbers', lineNumbers = $$props.lineNumbers);
		if ('tab' in $$props) $$invalidate('tab', tab = $$props.tab);
	};

	$$self.$capture_state = () => {
		return { codemirror_promise, _CodeMirror, readonly, errorLoc, flex, lineNumbers, tab, w, h, code, mode, editor, updating_externally, marker, error_line, destroyed, CodeMirror, previous_error_line, first };
	};

	$$self.$inject_state = $$props => {
		if ('readonly' in $$props) $$invalidate('readonly', readonly = $$props.readonly);
		if ('errorLoc' in $$props) $$invalidate('errorLoc', errorLoc = $$props.errorLoc);
		if ('flex' in $$props) $$invalidate('flex', flex = $$props.flex);
		if ('lineNumbers' in $$props) $$invalidate('lineNumbers', lineNumbers = $$props.lineNumbers);
		if ('tab' in $$props) $$invalidate('tab', tab = $$props.tab);
		if ('w' in $$props) $$invalidate('w', w = $$props.w);
		if ('h' in $$props) $$invalidate('h', h = $$props.h);
		if ('code' in $$props) $$invalidate('code', code = $$props.code);
		if ('mode' in $$props) mode = $$props.mode;
		if ('editor' in $$props) $$invalidate('editor', editor = $$props.editor);
		if ('updating_externally' in $$props) updating_externally = $$props.updating_externally;
		if ('marker' in $$props) $$invalidate('marker', marker = $$props.marker);
		if ('error_line' in $$props) $$invalidate('error_line', error_line = $$props.error_line);
		if ('destroyed' in $$props) destroyed = $$props.destroyed;
		if ('CodeMirror' in $$props) $$invalidate('CodeMirror', CodeMirror = $$props.CodeMirror);
		if ('previous_error_line' in $$props) $$invalidate('previous_error_line', previous_error_line = $$props.previous_error_line);
		if ('first' in $$props) first = $$props.first;
	};

	$$self.$$.update = ($$dirty = { editor: 1, w: 1, h: 1, marker: 1, errorLoc: 1, previous_error_line: 1, error_line: 1 }) => {
		if ($$dirty.editor || $$dirty.w || $$dirty.h) { if (editor && w && h) {
				editor.refresh();
			} }
		if ($$dirty.marker || $$dirty.errorLoc || $$dirty.editor) { {
				if (marker) marker.clear();
		
				if (errorLoc) {
					const line = errorLoc.line - 1;
					const ch = errorLoc.column;
		
					$$invalidate('marker', marker = editor.markText({ line, ch }, { line, ch: ch + 1 }, {
						className: 'error-loc'
					}));
		
					$$invalidate('error_line', error_line = line);
				} else {
					$$invalidate('error_line', error_line = null);
				}
			} }
		if ($$dirty.editor || $$dirty.previous_error_line || $$dirty.error_line) { if (editor) {
				if (previous_error_line != null) {
					editor.removeLineClass(previous_error_line, 'wrap', 'error-line');
				}
		
				if (error_line && (error_line !== previous_error_line)) {
					editor.addLineClass(error_line, 'wrap', 'error-line');
					$$invalidate('previous_error_line', previous_error_line = error_line);
				}
			} }
	};

	return {
		readonly,
		errorLoc,
		flex,
		lineNumbers,
		tab,
		w,
		h,
		code,
		set,
		update,
		resize,
		focus,
		refs,
		CodeMirror,
		textarea_binding,
		div_resize_handler
	};
}

class CodeMirror_1 extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, ["readonly", "errorLoc", "flex", "lineNumbers", "tab", "set", "update", "resize", "focus"]);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "CodeMirror_1", options, id: create_fragment$2.name });

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.set === undefined && !('set' in props)) {
			console.warn("<CodeMirror> was created without expected prop 'set'");
		}
		if (ctx.update === undefined && !('update' in props)) {
			console.warn("<CodeMirror> was created without expected prop 'update'");
		}
		if (ctx.resize === undefined && !('resize' in props)) {
			console.warn("<CodeMirror> was created without expected prop 'resize'");
		}
		if (ctx.focus === undefined && !('focus' in props)) {
			console.warn("<CodeMirror> was created without expected prop 'focus'");
		}
	}

	get readonly() {
		throw new Error("<CodeMirror>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set readonly(value) {
		throw new Error("<CodeMirror>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get errorLoc() {
		throw new Error("<CodeMirror>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set errorLoc(value) {
		throw new Error("<CodeMirror>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get flex() {
		throw new Error("<CodeMirror>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set flex(value) {
		throw new Error("<CodeMirror>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get lineNumbers() {
		throw new Error("<CodeMirror>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set lineNumbers(value) {
		throw new Error("<CodeMirror>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get tab() {
		throw new Error("<CodeMirror>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set tab(value) {
		throw new Error("<CodeMirror>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get set() {
		return this.$$.ctx.set;
	}

	set set(value) {
		throw new Error("<CodeMirror>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get update() {
		return this.$$.ctx.update;
	}

	set update(value) {
		throw new Error("<CodeMirror>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get resize() {
		return this.$$.ctx.resize;
	}

	set resize(value) {
		throw new Error("<CodeMirror>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get focus() {
		return this.$$.ctx.focus;
	}

	set focus(value) {
		throw new Error("<CodeMirror>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* node_modules\@sveltejs\svelte-repl\src\Input\ComponentSelector.svelte generated by Svelte v3.12.0 */
const { console: console_1 } = globals;

const file$3 = "node_modules\\@sveltejs\\svelte-repl\\src\\Input\\ComponentSelector.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = Object.create(ctx);
	child_ctx.component = list[i];
	return child_ctx;
}

// (200:1) {#if $components.length}
function create_if_block$3(ctx) {
	var div, t, button, svg, line0, line1, dispose;

	let each_value = ctx.$components;

	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			div = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t = space();
			button = element("button");
			svg = svg_element("svg");
			line0 = svg_element("line");
			line1 = svg_element("line");
			this.h();
		},

		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true }, false);
			var div_nodes = children(div);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div_nodes);
			}

			t = claim_space(div_nodes);

			button = claim_element(div_nodes, "BUTTON", { class: true, title: true }, false);
			var button_nodes = children(button);

			svg = claim_element(button_nodes, "svg", { width: true, height: true, viewBox: true, class: true }, true);
			var svg_nodes = children(svg);

			line0 = claim_element(svg_nodes, "line", { stroke: true, x1: true, y1: true, x2: true, y2: true }, true);
			var line0_nodes = children(line0);

			line0_nodes.forEach(detach_dev);

			line1 = claim_element(svg_nodes, "line", { stroke: true, x1: true, y1: true, x2: true, y2: true }, true);
			var line1_nodes = children(line1);

			line1_nodes.forEach(detach_dev);
			svg_nodes.forEach(detach_dev);
			button_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(line0, "stroke", "#999");
			attr_dev(line0, "x1", "12");
			attr_dev(line0, "y1", "5");
			attr_dev(line0, "x2", "12");
			attr_dev(line0, "y2", "19");
			add_location(line0, file$3, 249, 5, 5304);
			attr_dev(line1, "stroke", "#999");
			attr_dev(line1, "x1", "5");
			attr_dev(line1, "y1", "12");
			attr_dev(line1, "x2", "19");
			attr_dev(line1, "y2", "12");
			add_location(line1, file$3, 250, 5, 5363);
			attr_dev(svg, "width", "12");
			attr_dev(svg, "height", "12");
			attr_dev(svg, "viewBox", "0 0 24 24");
			attr_dev(svg, "class", "svelte-1wzo3es");
			add_location(svg, file$3, 248, 4, 5250);
			attr_dev(button, "class", "add-new svelte-1wzo3es");
			attr_dev(button, "title", "add new component");
			add_location(button, file$3, 247, 3, 5177);
			attr_dev(div, "class", "file-tabs svelte-1wzo3es");
			add_location(div, file$3, 200, 2, 3827);

			dispose = [
				listen_dev(button, "click", ctx.addNew),
				listen_dev(div, "dblclick", ctx.addNew)
			];
		},

		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div, null);
			}

			append_dev(div, t);
			append_dev(div, button);
			append_dev(button, svg);
			append_dev(svg, line0);
			append_dev(svg, line1);
		},

		p: function update(changed, ctx) {
			if (changed.$components || changed.$selected || changed.editing) {
				each_value = ctx.$components;

				let i;
				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(changed, child_ctx);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(div, t);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}
				each_blocks.length = each_value.length;
			}
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(div);
			}

			destroy_each(each_blocks, detaching);

			run_all(dispose);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block$3.name, type: "if", source: "(200:1) {#if $components.length}", ctx });
	return block;
}

// (228:6) {:else}
function create_else_block$1(ctx) {
	var div, t0_value = ctx.component.name + "", t0, t1, t2_value = ctx.component.type + "", t2, t3, span, svg, line0, line1, dispose;

	function click_handler() {
		return ctx.click_handler(ctx);
	}

	function click_handler_1() {
		return ctx.click_handler_1(ctx);
	}

	const block = {
		c: function create() {
			div = element("div");
			t0 = text(t0_value);
			t1 = text(".");
			t2 = text(t2_value);
			t3 = space();
			span = element("span");
			svg = svg_element("svg");
			line0 = svg_element("line");
			line1 = svg_element("line");
			this.h();
		},

		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true, title: true }, false);
			var div_nodes = children(div);

			t0 = claim_text(div_nodes, t0_value);
			t1 = claim_text(div_nodes, ".");
			t2 = claim_text(div_nodes, t2_value);
			div_nodes.forEach(detach_dev);
			t3 = claim_space(nodes);

			span = claim_element(nodes, "SPAN", { class: true }, false);
			var span_nodes = children(span);

			svg = claim_element(span_nodes, "svg", { width: true, height: true, viewBox: true, class: true }, true);
			var svg_nodes = children(svg);

			line0 = claim_element(svg_nodes, "line", { stroke: true, x1: true, y1: true, x2: true, y2: true }, true);
			var line0_nodes = children(line0);

			line0_nodes.forEach(detach_dev);

			line1 = claim_element(svg_nodes, "line", { stroke: true, x1: true, y1: true, x2: true, y2: true }, true);
			var line1_nodes = children(line1);

			line1_nodes.forEach(detach_dev);
			svg_nodes.forEach(detach_dev);
			span_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(div, "class", "editable svelte-1wzo3es");
			attr_dev(div, "title", "edit component name");
			add_location(div, file$3, 228, 7, 4673);
			attr_dev(line0, "stroke", "#999");
			attr_dev(line0, "x1", "18");
			attr_dev(line0, "y1", "6");
			attr_dev(line0, "x2", "6");
			attr_dev(line0, "y2", "18");
			add_location(line0, file$3, 238, 9, 4983);
			attr_dev(line1, "stroke", "#999");
			attr_dev(line1, "x1", "6");
			attr_dev(line1, "y1", "6");
			attr_dev(line1, "x2", "18");
			attr_dev(line1, "y2", "18");
			add_location(line1, file$3, 239, 9, 5045);
			attr_dev(svg, "width", "12");
			attr_dev(svg, "height", "12");
			attr_dev(svg, "viewBox", "0 0 24 24");
			attr_dev(svg, "class", "svelte-1wzo3es");
			add_location(svg, file$3, 237, 8, 4925);
			attr_dev(span, "class", "remove svelte-1wzo3es");
			add_location(span, file$3, 236, 7, 4858);

			dispose = [
				listen_dev(div, "click", click_handler),
				listen_dev(span, "click", click_handler_1)
			];
		},

		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, t0);
			append_dev(div, t1);
			append_dev(div, t2);
			insert_dev(target, t3, anchor);
			insert_dev(target, span, anchor);
			append_dev(span, svg);
			append_dev(svg, line0);
			append_dev(svg, line1);
		},

		p: function update(changed, new_ctx) {
			ctx = new_ctx;
			if ((changed.$components) && t0_value !== (t0_value = ctx.component.name + "")) {
				set_data_dev(t0, t0_value);
			}

			if ((changed.$components) && t2_value !== (t2_value = ctx.component.type + "")) {
				set_data_dev(t2, t2_value);
			}
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(div);
				detach_dev(t3);
				detach_dev(span);
			}

			run_all(dispose);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_else_block$1.name, type: "else", source: "(228:6) {:else}", ctx });
	return block;
}

// (216:6) {#if component === editing}
function create_if_block_2(ctx) {
	var span, t0_value = ctx.editing.name + (/\./.test(ctx.editing.name) ? '' : `.${ctx.editing.type}`) + "", t0, t1, input, dispose;

	const block = {
		c: function create() {
			span = element("span");
			t0 = text(t0_value);
			t1 = space();
			input = element("input");
			this.h();
		},

		l: function claim(nodes) {
			span = claim_element(nodes, "SPAN", { class: true }, false);
			var span_nodes = children(span);

			t0 = claim_text(span_nodes, t0_value);
			span_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);

			input = claim_element(nodes, "INPUT", { autofocus: true, spellcheck: true, class: true }, false);
			var input_nodes = children(input);

			input_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(span, "class", "input-sizer svelte-1wzo3es");
			add_location(span, file$3, 216, 7, 4283);
			input.autofocus = true;
			attr_dev(input, "spellcheck", false);
			attr_dev(input, "class", "svelte-1wzo3es");
			add_location(input, file$3, 219, 7, 4438);

			dispose = [
				listen_dev(input, "input", ctx.input_input_handler),
				listen_dev(input, "focus", selectInput),
				listen_dev(input, "blur", ctx.closeEdit),
				listen_dev(input, "keydown", keydown_handler)
			];
		},

		m: function mount(target, anchor) {
			insert_dev(target, span, anchor);
			append_dev(span, t0);
			insert_dev(target, t1, anchor);
			insert_dev(target, input, anchor);

			set_input_value(input, ctx.editing.name);

			input.focus();
		},

		p: function update(changed, ctx) {
			if ((changed.editing) && t0_value !== (t0_value = ctx.editing.name + (/\./.test(ctx.editing.name) ? '' : `.${ctx.editing.type}`) + "")) {
				set_data_dev(t0, t0_value);
			}

			if (changed.editing && (input.value !== ctx.editing.name)) set_input_value(input, ctx.editing.name);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(span);
				detach_dev(t1);
				detach_dev(input);
			}

			run_all(dispose);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block_2.name, type: "if", source: "(216:6) {#if component === editing}", ctx });
	return block;
}

// (211:5) {#if component.name == 'App'}
function create_if_block_1$1(ctx) {
	var div, t;

	const block = {
		c: function create() {
			div = element("div");
			t = text("App.svelte");
			this.h();
		},

		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true }, false);
			var div_nodes = children(div);

			t = claim_text(div_nodes, "App.svelte");
			div_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(div, "class", "uneditable svelte-1wzo3es");
			add_location(div, file$3, 211, 6, 4173);
		},

		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, t);
		},

		p: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(div);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block_1$1.name, type: "if", source: "(211:5) {#if component.name == 'App'}", ctx });
	return block;
}

// (202:3) {#each $components as component}
function create_each_block(ctx) {
	var div, div_id_value, dispose;

	function select_block_type(changed, ctx) {
		if (ctx.component.name == 'App') return create_if_block_1$1;
		if (ctx.component === ctx.editing) return create_if_block_2;
		return create_else_block$1;
	}

	var current_block_type = select_block_type(null, ctx);
	var if_block = current_block_type(ctx);

	function click_handler_2() {
		return ctx.click_handler_2(ctx);
	}

	const block = {
		c: function create() {
			div = element("div");
			if_block.c();
			this.h();
		},

		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { id: true, class: true, role: true }, false);
			var div_nodes = children(div);

			if_block.l(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(div, "id", div_id_value = ctx.component.name);
			attr_dev(div, "class", "button svelte-1wzo3es");
			attr_dev(div, "role", "button");
			toggle_class(div, "active", ctx.component === ctx.$selected);
			add_location(div, file$3, 202, 4, 3914);

			dispose = [
				listen_dev(div, "click", click_handler_2),
				listen_dev(div, "dblclick", dblclick_handler)
			];
		},

		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			if_block.m(div, null);
		},

		p: function update(changed, new_ctx) {
			ctx = new_ctx;
			if (current_block_type === (current_block_type = select_block_type(changed, ctx)) && if_block) {
				if_block.p(changed, ctx);
			} else {
				if_block.d(1);
				if_block = current_block_type(ctx);
				if (if_block) {
					if_block.c();
					if_block.m(div, null);
				}
			}

			if ((changed.$components) && div_id_value !== (div_id_value = ctx.component.name)) {
				attr_dev(div, "id", div_id_value);
			}

			if ((changed.$components || changed.$selected)) {
				toggle_class(div, "active", ctx.component === ctx.$selected);
			}
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(div);
			}

			if_block.d();
			run_all(dispose);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_each_block.name, type: "each", source: "(202:3) {#each $components as component}", ctx });
	return block;
}

function create_fragment$3(ctx) {
	var div;

	var if_block = (ctx.$components.length) && create_if_block$3(ctx);

	const block = {
		c: function create() {
			div = element("div");
			if (if_block) if_block.c();
			this.h();
		},

		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true }, false);
			var div_nodes = children(div);

			if (if_block) if_block.l(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(div, "class", "component-selector svelte-1wzo3es");
			add_location(div, file$3, 198, 0, 3766);
		},

		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			if (if_block) if_block.m(div, null);
		},

		p: function update(changed, ctx) {
			if (ctx.$components.length) {
				if (if_block) {
					if_block.p(changed, ctx);
				} else {
					if_block = create_if_block$3(ctx);
					if_block.c();
					if_block.m(div, null);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},

		i: noop,
		o: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(div);
			}

			if (if_block) if_block.d();
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment$3.name, type: "component", source: "", ctx });
	return block;
}

function selectInput(event) {
	setTimeout(() => {
		event.target.select();
	});
}

const keydown_handler = (e) => e.which === 13 && e.target.blur();

const dblclick_handler = (e) => e.stopPropagation();

function instance$3($$self, $$props, $$invalidate) {
	let $selected, $components, $$unsubscribe_components = noop, $$subscribe_components = () => ($$unsubscribe_components(), $$unsubscribe_components = subscribe(components, $$value => { $components = $$value; $$invalidate('$components', $components); }), components);

	$$self.$$.on_destroy.push(() => $$unsubscribe_components());

	let { handle_select } = $$props;

	const { components, selected, request_focus, rebundle } = getContext('REPL'); $$subscribe_components(); validate_store(selected, 'selected'); component_subscribe($$self, selected, $$value => { $selected = $$value; $$invalidate('$selected', $selected); });

	let editing = null;

	function selectComponent(component) {
		if ($selected !== component) {
			$$invalidate('editing', editing = null);
			handle_select(component);
		}
	}

	function editTab(component) {
		if ($selected === component) {
			$$invalidate('editing', editing = $selected);
		}
	}

	function closeEdit() {
		const match = /(.+)\.(svelte|js)$/.exec($selected.name);
		set_store_value(selected, $selected.name = match ? match[1] : $selected.name, $selected);
		if (match && match[2]) set_store_value(selected, $selected.type = match[2], $selected);
		$$invalidate('editing', editing = null);

		// re-select, in case the type changed
		handle_select($selected);

		$$subscribe_components($$invalidate('components', components)); // TODO necessary?

		// focus the editor, but wait a beat (so key events aren't misdirected)
		setTimeout(request_focus);

		rebundle();
	}

	function remove(component) {
		let result = confirm(`Are you sure you want to delete ${component.name}.${component.type}?`);

		if (result) {
			const index = $components.indexOf(component);

			if (~index) {
				components.set($components.slice(0, index).concat($components.slice(index + 1)));
			} else {
				console.error(`Could not find component! That's... odd`);
			}

			handle_select($components[index] || $components[$components.length - 1]);
		}
	}

	let uid = 1;

	function addNew() {
		const component = {
			name: uid++ ? `Component${uid}` : 'Component1',
			type: 'svelte',
			source: ''
		};

		$$invalidate('editing', editing = component);

		setTimeout(() => {
			// TODO we can do this without IDs
			document.getElementById(component.name).scrollIntoView(false);
		});

		components.update(components => components.concat(component));
		handle_select(component);
	}

	const writable_props = ['handle_select'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console_1.warn(`<ComponentSelector> was created with unknown prop '${key}'`);
	});

	function input_input_handler() {
		editing.name = this.value;
		$$invalidate('editing', editing);
	}

	const click_handler = ({ component }) => editTab(component);

	const click_handler_1 = ({ component }) => remove(component);

	const click_handler_2 = ({ component }) => selectComponent(component);

	$$self.$set = $$props => {
		if ('handle_select' in $$props) $$invalidate('handle_select', handle_select = $$props.handle_select);
	};

	$$self.$capture_state = () => {
		return { handle_select, editing, uid, $selected, $components };
	};

	$$self.$inject_state = $$props => {
		if ('handle_select' in $$props) $$invalidate('handle_select', handle_select = $$props.handle_select);
		if ('editing' in $$props) $$invalidate('editing', editing = $$props.editing);
		if ('uid' in $$props) uid = $$props.uid;
		if ('$selected' in $$props) selected.set($selected);
		if ('$components' in $$props) components.set($components);
	};

	return {
		handle_select,
		components,
		selected,
		editing,
		selectComponent,
		editTab,
		closeEdit,
		remove,
		addNew,
		$selected,
		$components,
		input_input_handler,
		click_handler,
		click_handler_1,
		click_handler_2
	};
}

class ComponentSelector extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$3, create_fragment$3, safe_not_equal, ["handle_select"]);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "ComponentSelector", options, id: create_fragment$3.name });

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.handle_select === undefined && !('handle_select' in props)) {
			console_1.warn("<ComponentSelector> was created without expected prop 'handle_select'");
		}
	}

	get handle_select() {
		throw new Error("<ComponentSelector>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set handle_select(value) {
		throw new Error("<ComponentSelector>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* node_modules\@sveltejs\svelte-repl\src\Input\ModuleEditor.svelte generated by Svelte v3.12.0 */

const file$4 = "node_modules\\@sveltejs\\svelte-repl\\src\\Input\\ModuleEditor.svelte";

function get_each_context$1(ctx, list, i) {
	const child_ctx = Object.create(ctx);
	child_ctx.warning = list[i];
	return child_ctx;
}

// (51:2) {#if $bundle}
function create_if_block$4(ctx) {
	var current_block_type_index, if_block, if_block_anchor, current;

	var if_block_creators = [
		create_if_block_1$2,
		create_if_block_2$1
	];

	var if_blocks = [];

	function select_block_type(changed, ctx) {
		if (ctx.$bundle.error) return 0;
		if (ctx.$bundle.warnings.length > 0) return 1;
		return -1;
	}

	if (~(current_block_type_index = select_block_type(null, ctx))) {
		if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
	}

	const block = {
		c: function create() {
			if (if_block) if_block.c();
			if_block_anchor = empty();
		},

		l: function claim(nodes) {
			if (if_block) if_block.l(nodes);
			if_block_anchor = empty();
		},

		m: function mount(target, anchor) {
			if (~current_block_type_index) if_blocks[current_block_type_index].m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(changed, ctx);
			if (current_block_type_index === previous_block_index) {
				if (~current_block_type_index) if_blocks[current_block_type_index].p(changed, ctx);
			} else {
				if (if_block) {
					group_outros();
					transition_out(if_blocks[previous_block_index], 1, 1, () => {
						if_blocks[previous_block_index] = null;
					});
					check_outros();
				}

				if (~current_block_type_index) {
					if_block = if_blocks[current_block_type_index];
					if (!if_block) {
						if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
						if_block.c();
					}
					transition_in(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				} else {
					if_block = null;
				}
			}
		},

		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},

		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},

		d: function destroy(detaching) {
			if (~current_block_type_index) if_blocks[current_block_type_index].d(detaching);

			if (detaching) {
				detach_dev(if_block_anchor);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block$4.name, type: "if", source: "(51:2) {#if $bundle}", ctx });
	return block;
}

// (54:41) 
function create_if_block_2$1(ctx) {
	var each_1_anchor, current;

	let each_value = ctx.$bundle.warnings;

	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block$1(get_each_context$1(ctx, each_value, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	const block = {
		c: function create() {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			each_1_anchor = empty();
		},

		l: function claim(nodes) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(nodes);
			}

			each_1_anchor = empty();
		},

		m: function mount(target, anchor) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			insert_dev(target, each_1_anchor, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			if (changed.$bundle || changed.$selected) {
				each_value = ctx.$bundle.warnings;

				let i;
				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context$1(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(changed, child_ctx);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block$1(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);
					}
				}

				group_outros();
				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}
				check_outros();
			}
		},

		i: function intro(local) {
			if (current) return;
			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			current = true;
		},

		o: function outro(local) {
			each_blocks = each_blocks.filter(Boolean);
			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			current = false;
		},

		d: function destroy(detaching) {
			destroy_each(each_blocks, detaching);

			if (detaching) {
				detach_dev(each_1_anchor);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block_2$1.name, type: "if", source: "(54:41) ", ctx });
	return block;
}

// (52:3) {#if $bundle.error}
function create_if_block_1$2(ctx) {
	var current;

	var message = new Message({
		props: {
		kind: "error",
		details: ctx.$bundle.error,
		filename: "" + ctx.$selected.name + "." + ctx.$selected.type
	},
		$$inline: true
	});

	const block = {
		c: function create() {
			message.$$.fragment.c();
		},

		l: function claim(nodes) {
			message.$$.fragment.l(nodes);
		},

		m: function mount(target, anchor) {
			mount_component(message, target, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var message_changes = {};
			if (changed.$bundle) message_changes.details = ctx.$bundle.error;
			if (changed.$selected) message_changes.filename = "" + ctx.$selected.name + "." + ctx.$selected.type;
			message.$set(message_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(message.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(message.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			destroy_component(message, detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block_1$2.name, type: "if", source: "(52:3) {#if $bundle.error}", ctx });
	return block;
}

// (55:4) {#each $bundle.warnings as warning}
function create_each_block$1(ctx) {
	var current;

	var message = new Message({
		props: {
		kind: "warning",
		details: ctx.warning,
		filename: "" + ctx.$selected.name + "." + ctx.$selected.type
	},
		$$inline: true
	});

	const block = {
		c: function create() {
			message.$$.fragment.c();
		},

		l: function claim(nodes) {
			message.$$.fragment.l(nodes);
		},

		m: function mount(target, anchor) {
			mount_component(message, target, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var message_changes = {};
			if (changed.$bundle) message_changes.details = ctx.warning;
			if (changed.$selected) message_changes.filename = "" + ctx.$selected.name + "." + ctx.$selected.type;
			message.$set(message_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(message.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(message.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			destroy_component(message, detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_each_block$1.name, type: "each", source: "(55:4) {#each $bundle.warnings as warning}", ctx });
	return block;
}

function create_fragment$4(ctx) {
	var div2, div0, t, div1, current;

	let codemirror_props = { errorLoc: ctx.errorLoc };
	var codemirror = new CodeMirror_1({ props: codemirror_props, $$inline: true });

	ctx.codemirror_binding(codemirror);
	codemirror.$on("change", ctx.handle_change);

	var if_block = (ctx.$bundle) && create_if_block$4(ctx);

	const block = {
		c: function create() {
			div2 = element("div");
			div0 = element("div");
			codemirror.$$.fragment.c();
			t = space();
			div1 = element("div");
			if (if_block) if_block.c();
			this.h();
		},

		l: function claim(nodes) {
			div2 = claim_element(nodes, "DIV", { class: true }, false);
			var div2_nodes = children(div2);

			div0 = claim_element(div2_nodes, "DIV", { class: true }, false);
			var div0_nodes = children(div0);

			codemirror.$$.fragment.l(div0_nodes);
			div0_nodes.forEach(detach_dev);
			t = claim_space(div2_nodes);

			div1 = claim_element(div2_nodes, "DIV", { class: true }, false);
			var div1_nodes = children(div1);

			if (if_block) if_block.l(div1_nodes);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(div0, "class", "editor svelte-jozebv");
			add_location(div0, file$4, 41, 1, 756);
			attr_dev(div1, "class", "info");
			add_location(div1, file$4, 49, 1, 871);
			attr_dev(div2, "class", "editor-wrapper svelte-jozebv");
			add_location(div2, file$4, 40, 0, 726);
		},

		m: function mount(target, anchor) {
			insert_dev(target, div2, anchor);
			append_dev(div2, div0);
			mount_component(codemirror, div0, null);
			append_dev(div2, t);
			append_dev(div2, div1);
			if (if_block) if_block.m(div1, null);
			current = true;
		},

		p: function update(changed, ctx) {
			var codemirror_changes = {};
			if (changed.errorLoc) codemirror_changes.errorLoc = ctx.errorLoc;
			codemirror.$set(codemirror_changes);

			if (ctx.$bundle) {
				if (if_block) {
					if_block.p(changed, ctx);
					transition_in(if_block, 1);
				} else {
					if_block = create_if_block$4(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(div1, null);
				}
			} else if (if_block) {
				group_outros();
				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});
				check_outros();
			}
		},

		i: function intro(local) {
			if (current) return;
			transition_in(codemirror.$$.fragment, local);

			transition_in(if_block);
			current = true;
		},

		o: function outro(local) {
			transition_out(codemirror.$$.fragment, local);
			transition_out(if_block);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(div2);
			}

			ctx.codemirror_binding(null);

			destroy_component(codemirror);

			if (if_block) if_block.d();
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment$4.name, type: "component", source: "", ctx });
	return block;
}

function instance$4($$self, $$props, $$invalidate) {
	let $bundle, $selected;

	

	const { bundle, selected, handle_change, navigate, register_module_editor } = getContext('REPL'); validate_store(bundle, 'bundle'); component_subscribe($$self, bundle, $$value => { $bundle = $$value; $$invalidate('$bundle', $bundle); }); validate_store(selected, 'selected'); component_subscribe($$self, selected, $$value => { $selected = $$value; $$invalidate('$selected', $selected); });

	let { errorLoc } = $$props;

	let editor;
	onMount(() => {
		register_module_editor(editor);
	});

	function focus() {
		editor.focus();
	}

	const writable_props = ['errorLoc'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<ModuleEditor> was created with unknown prop '${key}'`);
	});

	function codemirror_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			$$invalidate('editor', editor = $$value);
		});
	}

	$$self.$set = $$props => {
		if ('errorLoc' in $$props) $$invalidate('errorLoc', errorLoc = $$props.errorLoc);
	};

	$$self.$capture_state = () => {
		return { errorLoc, editor, $bundle, $selected };
	};

	$$self.$inject_state = $$props => {
		if ('errorLoc' in $$props) $$invalidate('errorLoc', errorLoc = $$props.errorLoc);
		if ('editor' in $$props) $$invalidate('editor', editor = $$props.editor);
		if ('$bundle' in $$props) bundle.set($bundle);
		if ('$selected' in $$props) selected.set($selected);
	};

	return {
		bundle,
		selected,
		handle_change,
		errorLoc,
		editor,
		focus,
		$bundle,
		$selected,
		codemirror_binding
	};
}

class ModuleEditor extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$4, create_fragment$4, safe_not_equal, ["errorLoc", "focus"]);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "ModuleEditor", options, id: create_fragment$4.name });

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.errorLoc === undefined && !('errorLoc' in props)) {
			console.warn("<ModuleEditor> was created without expected prop 'errorLoc'");
		}
		if (ctx.focus === undefined && !('focus' in props)) {
			console.warn("<ModuleEditor> was created without expected prop 'focus'");
		}
	}

	get errorLoc() {
		throw new Error("<ModuleEditor>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set errorLoc(value) {
		throw new Error("<ModuleEditor>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get focus() {
		return this.$$.ctx.focus;
	}

	set focus(value) {
		throw new Error("<ModuleEditor>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

var charToInteger = {};
var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
for (var i = 0; i < chars.length; i++) {
    charToInteger[chars.charCodeAt(i)] = i;
}
function decode(mappings) {
    var generatedCodeColumn = 0; // first field
    var sourceFileIndex = 0; // second field
    var sourceCodeLine = 0; // third field
    var sourceCodeColumn = 0; // fourth field
    var nameIndex = 0; // fifth field
    var decoded = [];
    var line = [];
    var segment = [];
    for (var i = 0, j = 0, shift = 0, value = 0, len = mappings.length; i < len; i++) {
        var c = mappings.charCodeAt(i);
        if (c === 44) { // ","
            if (segment.length)
                line.push(segment);
            segment = [];
            j = 0;
        }
        else if (c === 59) { // ";"
            if (segment.length)
                line.push(segment);
            segment = [];
            j = 0;
            decoded.push(line);
            line = [];
            generatedCodeColumn = 0;
        }
        else {
            var integer = charToInteger[c];
            if (integer === undefined) {
                throw new Error('Invalid character (' + String.fromCharCode(c) + ')');
            }
            var hasContinuationBit = integer & 32;
            integer &= 31;
            value += integer << shift;
            if (hasContinuationBit) {
                shift += 5;
            }
            else {
                var shouldNegate = value & 1;
                value >>>= 1;
                if (shouldNegate) {
                    value = -value;
                    if (value === 0)
                        value = -0x80000000;
                }
                if (j == 0) {
                    generatedCodeColumn += value;
                    segment.push(generatedCodeColumn);
                }
                else if (j === 1) {
                    sourceFileIndex += value;
                    segment.push(sourceFileIndex);
                }
                else if (j === 2) {
                    sourceCodeLine += value;
                    segment.push(sourceCodeLine);
                }
                else if (j === 3) {
                    sourceCodeColumn += value;
                    segment.push(sourceCodeColumn);
                }
                else if (j === 4) {
                    nameIndex += value;
                    segment.push(nameIndex);
                }
                j++;
                value = shift = 0; // reset
            }
        }
    }
    if (segment.length)
        line.push(segment);
    decoded.push(line);
    return decoded;
}

function getLocationFromStack(stack, map) {
	if (!stack) return;
	const last = stack.split('\n')[1];
	const match = /<anonymous>:(\d+):(\d+)\)$/.exec(last);

	if (!match) return null;

	const line = +match[1];
	const column = +match[2];

	return trace({ line, column }, map);
}

function trace(loc, map) {
	const mappings = decode(map.mappings);
	const segments = mappings[loc.line - 1];

	for (let i = 0; i < segments.length; i += 1) {
		const segment = segments[i];
		if (segment[0] === loc.column) {
			const [, sourceIndex, line, column] = segment;
			const source = map.sources[sourceIndex].slice(2);

			return { source, line: line + 1, column };
		}
	}

	return null;
}

let uid = 1;

class ReplProxy {
	constructor(iframe, handlers) {
		this.iframe = iframe;
		this.handlers = handlers;

		this.pending_cmds = new Map();

		this.handle_event = e => this.handle_repl_message(e);
		window.addEventListener('message', this.handle_event, false);
	}

	destroy() {
		window.removeEventListener('message', this.handle_event);
	}

	iframe_command(action, args) {
		return new Promise((resolve, reject) => {
			const cmd_id = uid++;

			this.pending_cmds.set(cmd_id, { resolve, reject });

			this.iframe.contentWindow.postMessage({ action, cmd_id, args }, '*');
		});
	}

	handle_command_message(cmd_data) {
		let action = cmd_data.action;
		let id = cmd_data.cmd_id;
		let handler = this.pending_cmds.get(id);

		if (handler) {
			this.pending_cmds.delete(id);
			if (action === 'cmd_error') {
				let { message, stack } = cmd_data;
				let e = new Error(message);
				e.stack = stack;
				handler.reject(e);
			}

			if (action === 'cmd_ok') {
				handler.resolve(cmd_data.args);
			}
		} else {
			console.error('command not found', id, cmd_data, [...this.pending_cmds.keys()]);
		}
	}

	handle_repl_message(event) {
		if (event.source !== this.iframe.contentWindow) return;

		const { action, args } = event.data;

		if (action === 'cmd_error' || action === 'cmd_ok') {
			this.handle_command_message(event.data);
		}

		if (action === 'fetch_progress') {
			this.handlers.on_fetch_progress(args.remaining);
		}
	}

	eval(script) {
		return this.iframe_command('eval', { script });
	}

	handle_links() {
		return this.iframe_command('catch_clicks', {});
	}
}

var srcdoc = "<!doctype html>\n<html>\n\t<head>\n\t\t<style>\n\t\t\thtml, body {\n\tposition: relative;\n\twidth: 100%;\n\theight: 100%;\n}\n\nbody {\n\tcolor: #333;\n\tmargin: 0;\n\tpadding: 8px;\n\tbox-sizing: border-box;\n\tfont-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n}\n\na {\n\tcolor: rgb(0,100,200);\n\ttext-decoration: none;\n}\n\na:hover {\n\ttext-decoration: underline;\n}\n\na:visited {\n\tcolor: rgb(0,80,160);\n}\n\nlabel {\n\tdisplay: block;\n}\n\ninput, button, select, textarea {\n\tfont-family: inherit;\n\tfont-size: inherit;\n\tpadding: 0.4em;\n\tmargin: 0 0 0.5em 0;\n\tbox-sizing: border-box;\n\tborder: 1px solid #ccc;\n\tborder-radius: 2px;\n}\n\ninput:disabled {\n\tcolor: #ccc;\n}\n\ninput[type=\"range\"] {\n\theight: 0;\n}\n\nbutton {\n\tbackground-color: #f4f4f4;\n\toutline: none;\n}\n\nbutton:active {\n\tbackground-color: #ddd;\n}\n\nbutton:focus {\n\tborder-color: #666;\n}\n\t\t</style>\n\n\t\t<script>\n\t\t\t(function(){\n\t\t\t\tfunction handle_message(ev) {\n\t\t\t\t\tlet { action, cmd_id } = ev.data;\n\t\t\t\t\tconst send_message = (payload) => parent.postMessage( { ...payload }, ev.origin);\n\t\t\t\t\tconst send_reply = (payload) => send_message({ ...payload, cmd_id });\n\t\t\t\t\tconst send_ok = () => send_reply({ action: 'cmd_ok' });\n\t\t\t\t\tconst send_error = (message, stack) => send_reply({ action: 'cmd_error', message, stack });\n\n\t\t\t\t\tif (action === 'eval') {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst { script } = ev.data.args;\n\t\t\t\t\t\t\teval(script);\n\t\t\t\t\t\t\tsend_ok();\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tsend_error(e.message, e.stack);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (action === 'catch_clicks') {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst top_origin = ev.origin;\n\t\t\t\t\t\t\tdocument.body.addEventListener('click', event => {\n\t\t\t\t\t\t\t\tif (event.which !== 1) return;\n\t\t\t\t\t\t\t\tif (event.metaKey || event.ctrlKey || event.shiftKey) return;\n\t\t\t\t\t\t\t\tif (event.defaultPrevented) return;\n\n\t\t\t\t\t\t\t\t// ensure target is a link\n\t\t\t\t\t\t\t\tlet el = event.target;\n\t\t\t\t\t\t\t\twhile (el && el.nodeName !== 'A') el = el.parentNode;\n\t\t\t\t\t\t\t\tif (!el || el.nodeName !== 'A') return;\n\n\t\t\t\t\t\t\t\tif (el.hasAttribute('download') || el.getAttribute('rel') === 'external' || el.target) return;\n\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\t\t\t\tif (el.href.startsWith(top_origin)) {\n\t\t\t\t\t\t\t\t\tconst url = new URL(el.href);\n\t\t\t\t\t\t\t\t\tif (url.hash[0] === '#') {\n\t\t\t\t\t\t\t\t\t\twindow.location.hash = url.hash;\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\twindow.open(el.href, '_blank');\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tsend_ok();\n\t\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\t\tsend_error(e.message, e.stack);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\twindow.addEventListener('message', handle_message, false);\n\t\t\t}).call(this);\n\t\t</script>\n\t</head>\n\t<body></body>\n</html>";

/* node_modules\@sveltejs\svelte-repl\src\Output\Viewer.svelte generated by Svelte v3.12.0 */

const file$5 = "node_modules\\@sveltejs\\svelte-repl\\src\\Output\\Viewer.svelte";

// (148:31) 
function create_if_block_1$3(ctx) {
	var current;

	var message = new Message({
		props: {
		kind: "info",
		truncate: true,
		$$slots: { default: [create_default_slot$1] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	const block = {
		c: function create() {
			message.$$.fragment.c();
		},

		l: function claim(nodes) {
			message.$$.fragment.l(nodes);
		},

		m: function mount(target, anchor) {
			mount_component(message, target, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var message_changes = {};
			if (changed.$$scope || changed.status) message_changes.$$scope = { changed, ctx };
			message.$set(message_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(message.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(message.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			destroy_component(message, detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block_1$3.name, type: "if", source: "(148:31) ", ctx });
	return block;
}

// (146:2) {#if error}
function create_if_block$5(ctx) {
	var current;

	var message = new Message({
		props: { kind: "error", details: ctx.error },
		$$inline: true
	});

	const block = {
		c: function create() {
			message.$$.fragment.c();
		},

		l: function claim(nodes) {
			message.$$.fragment.l(nodes);
		},

		m: function mount(target, anchor) {
			mount_component(message, target, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var message_changes = {};
			if (changed.error) message_changes.details = ctx.error;
			message.$set(message_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(message.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(message.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			destroy_component(message, detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block$5.name, type: "if", source: "(146:2) {#if error}", ctx });
	return block;
}

// (149:3) <Message kind="info" truncate>
function create_default_slot$1(ctx) {
	var t_value = ctx.status || 'loading Svelte compiler...' + "", t;

	const block = {
		c: function create() {
			t = text(t_value);
		},

		l: function claim(nodes) {
			t = claim_text(nodes, t_value);
		},

		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},

		p: function update(changed, ctx) {
			if ((changed.status) && t_value !== (t_value = ctx.status || 'loading Svelte compiler...' + "")) {
				set_data_dev(t, t_value);
			}
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(t);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_default_slot$1.name, type: "slot", source: "(149:3) <Message kind=\"info\" truncate>", ctx });
	return block;
}

function create_fragment$5(ctx) {
	var div1, iframe_1, iframe_1_sandbox_value, iframe_1_class_value, t, div0, current_block_type_index, if_block, current;

	var if_block_creators = [
		create_if_block$5,
		create_if_block_1$3
	];

	var if_blocks = [];

	function select_block_type(changed, ctx) {
		if (ctx.error) return 0;
		if (ctx.status || !ctx.$bundle) return 1;
		return -1;
	}

	if (~(current_block_type_index = select_block_type(null, ctx))) {
		if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
	}

	const block = {
		c: function create() {
			div1 = element("div");
			iframe_1 = element("iframe");
			t = space();
			div0 = element("div");
			if (if_block) if_block.c();
			this.h();
		},

		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true }, false);
			var div1_nodes = children(div1);

			iframe_1 = claim_element(div1_nodes, "IFRAME", { title: true, sandbox: true, class: true, srcdoc: true }, false);
			var iframe_1_nodes = children(iframe_1);

			iframe_1_nodes.forEach(detach_dev);
			t = claim_space(div1_nodes);

			div0 = claim_element(div1_nodes, "DIV", { class: true }, false);
			var div0_nodes = children(div0);

			if (if_block) if_block.l(div0_nodes);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(iframe_1, "title", "Result");
			attr_dev(iframe_1, "sandbox", iframe_1_sandbox_value = "allow-popups-to-escape-sandbox allow-scripts allow-popups allow-forms allow-pointer-lock allow-top-navigation allow-modals " + (ctx.relaxed ? 'allow-same-origin' : ''));
			attr_dev(iframe_1, "class", iframe_1_class_value = "" + null_to_empty((ctx.error || pending || ctx.pending_imports ? 'greyed-out' : '')) + " svelte-16cfj92");
			attr_dev(iframe_1, "srcdoc", srcdoc);
			toggle_class(iframe_1, "inited", ctx.inited);
			add_location(iframe_1, file$5, 135, 1, 2626);
			attr_dev(div0, "class", "overlay svelte-16cfj92");
			add_location(div0, file$5, 144, 1, 2952);
			attr_dev(div1, "class", "iframe-container svelte-16cfj92");
			add_location(div1, file$5, 134, 0, 2594);
		},

		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, iframe_1);
			ctx.iframe_1_binding(iframe_1);
			append_dev(div1, t);
			append_dev(div1, div0);
			if (~current_block_type_index) if_blocks[current_block_type_index].m(div0, null);
			current = true;
		},

		p: function update(changed, ctx) {
			if ((!current || changed.relaxed) && iframe_1_sandbox_value !== (iframe_1_sandbox_value = "allow-popups-to-escape-sandbox allow-scripts allow-popups allow-forms allow-pointer-lock allow-top-navigation allow-modals " + (ctx.relaxed ? 'allow-same-origin' : ''))) {
				attr_dev(iframe_1, "sandbox", iframe_1_sandbox_value);
			}

			if ((!current || changed.error || changed.pending_imports) && iframe_1_class_value !== (iframe_1_class_value = "" + null_to_empty((ctx.error || pending || ctx.pending_imports ? 'greyed-out' : '')) + " svelte-16cfj92")) {
				attr_dev(iframe_1, "class", iframe_1_class_value);
			}

			if ((changed.error || changed.pending_imports || changed.inited)) {
				toggle_class(iframe_1, "inited", ctx.inited);
			}

			var previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(changed, ctx);
			if (current_block_type_index === previous_block_index) {
				if (~current_block_type_index) if_blocks[current_block_type_index].p(changed, ctx);
			} else {
				if (if_block) {
					group_outros();
					transition_out(if_blocks[previous_block_index], 1, 1, () => {
						if_blocks[previous_block_index] = null;
					});
					check_outros();
				}

				if (~current_block_type_index) {
					if_block = if_blocks[current_block_type_index];
					if (!if_block) {
						if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
						if_block.c();
					}
					transition_in(if_block, 1);
					if_block.m(div0, null);
				} else {
					if_block = null;
				}
			}
		},

		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},

		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(div1);
			}

			ctx.iframe_1_binding(null);
			if (~current_block_type_index) if_blocks[current_block_type_index].d();
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment$5.name, type: "component", source: "", ctx });
	return block;
}

let pending = false;

function instance$5($$self, $$props, $$invalidate) {
	let $bundle;
	const { bundle, navigate } = getContext('REPL'); validate_store(bundle, 'bundle'); component_subscribe($$self, bundle, $$value => { $bundle = $$value; $$invalidate('$bundle', $bundle); });

	let { error } = $$props; // TODO should this be exposed as a prop?

	function setProp(prop, value) {
		if (!proxy) return;
		proxy.setProp(prop, value);
	}

	let { status, relaxed = false, injectedJS = '', injectedCSS = '' } = $$props;

	let iframe;
	let pending_imports = 0;

	let proxy = null;

	let ready = false;
	let inited = false;

	onMount(() => {
		proxy = new ReplProxy(iframe, {
			on_fetch_progress: progress => {
				$$invalidate('pending_imports', pending_imports = progress);
			}
		});

		iframe.addEventListener('load', () => {
			proxy.handle_links();
			$$invalidate('ready', ready = true);
		});

		return () => {
			proxy.destroy();
		}
	});

	async function apply_bundle($bundle) {
		if (!$bundle || $bundle.error) return;

		try {
			await proxy.eval(`
				${injectedJS}

				${styles}

				const styles = document.querySelectorAll('style[id^=svelte-]');

				${$bundle.dom.code}

				let i = styles.length;
				while (i--) styles[i].parentNode.removeChild(styles[i]);

				if (window.component) {
					try {
						window.component.$destroy();
					} catch (err) {
						console.error(err);
					}
				}

				document.body.innerHTML = '';
				window.location.hash = '';
				window._svelteTransitionManager = null;

				window.component = new SvelteComponent.default({
					target: document.body
				});
			`);

			$$invalidate('error', error = null);
		} catch (e) {
			const loc = getLocationFromStack(e.stack, $bundle.dom.map);
			if (loc) {
				e.filename = loc.source;
				e.loc = { line: loc.line, column: loc.column };
			}

			$$invalidate('error', error = e);
		}

		$$invalidate('inited', inited = true);
	}

	const writable_props = ['error', 'status', 'relaxed', 'injectedJS', 'injectedCSS'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<Viewer> was created with unknown prop '${key}'`);
	});

	function iframe_1_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			$$invalidate('iframe', iframe = $$value);
		});
	}

	$$self.$set = $$props => {
		if ('error' in $$props) $$invalidate('error', error = $$props.error);
		if ('status' in $$props) $$invalidate('status', status = $$props.status);
		if ('relaxed' in $$props) $$invalidate('relaxed', relaxed = $$props.relaxed);
		if ('injectedJS' in $$props) $$invalidate('injectedJS', injectedJS = $$props.injectedJS);
		if ('injectedCSS' in $$props) $$invalidate('injectedCSS', injectedCSS = $$props.injectedCSS);
	};

	$$self.$capture_state = () => {
		return { error, status, relaxed, injectedJS, injectedCSS, iframe, pending_imports, pending, proxy, ready, inited, styles, $bundle };
	};

	$$self.$inject_state = $$props => {
		if ('error' in $$props) $$invalidate('error', error = $$props.error);
		if ('status' in $$props) $$invalidate('status', status = $$props.status);
		if ('relaxed' in $$props) $$invalidate('relaxed', relaxed = $$props.relaxed);
		if ('injectedJS' in $$props) $$invalidate('injectedJS', injectedJS = $$props.injectedJS);
		if ('injectedCSS' in $$props) $$invalidate('injectedCSS', injectedCSS = $$props.injectedCSS);
		if ('iframe' in $$props) $$invalidate('iframe', iframe = $$props.iframe);
		if ('pending_imports' in $$props) $$invalidate('pending_imports', pending_imports = $$props.pending_imports);
		if ('pending' in $$props) $$invalidate('pending', pending = $$props.pending);
		if ('proxy' in $$props) proxy = $$props.proxy;
		if ('ready' in $$props) $$invalidate('ready', ready = $$props.ready);
		if ('inited' in $$props) $$invalidate('inited', inited = $$props.inited);
		if ('styles' in $$props) styles = $$props.styles;
		if ('$bundle' in $$props) bundle.set($bundle);
	};

	let styles;

	$$self.$$.update = ($$dirty = { ready: 1, $bundle: 1, injectedCSS: 1 }) => {
		if ($$dirty.ready || $$dirty.$bundle) { if (ready) apply_bundle($bundle); }
		if ($$dirty.injectedCSS) { styles = injectedCSS && `{
		const style = document.createElement('style');
		style.textContent = ${JSON.stringify(injectedCSS)};
		document.head.appendChild(style);
	}`; }
	};

	return {
		bundle,
		error,
		setProp,
		status,
		relaxed,
		injectedJS,
		injectedCSS,
		iframe,
		pending_imports,
		inited,
		$bundle,
		iframe_1_binding
	};
}

class Viewer extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$5, create_fragment$5, safe_not_equal, ["error", "setProp", "status", "relaxed", "injectedJS", "injectedCSS"]);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "Viewer", options, id: create_fragment$5.name });

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.error === undefined && !('error' in props)) {
			console.warn("<Viewer> was created without expected prop 'error'");
		}
		if (ctx.setProp === undefined && !('setProp' in props)) {
			console.warn("<Viewer> was created without expected prop 'setProp'");
		}
		if (ctx.status === undefined && !('status' in props)) {
			console.warn("<Viewer> was created without expected prop 'status'");
		}
	}

	get error() {
		throw new Error("<Viewer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set error(value) {
		throw new Error("<Viewer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get setProp() {
		return this.$$.ctx.setProp;
	}

	set setProp(value) {
		throw new Error("<Viewer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get status() {
		throw new Error("<Viewer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set status(value) {
		throw new Error("<Viewer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get relaxed() {
		throw new Error("<Viewer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set relaxed(value) {
		throw new Error("<Viewer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get injectedJS() {
		throw new Error("<Viewer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set injectedJS(value) {
		throw new Error("<Viewer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get injectedCSS() {
		throw new Error("<Viewer>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set injectedCSS(value) {
		throw new Error("<Viewer>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* node_modules\@sveltejs\svelte-repl\src\Output\CompilerOptions.svelte generated by Svelte v3.12.0 */

const file$6 = "node_modules\\@sveltejs\\svelte-repl\\src\\Output\\CompilerOptions.svelte";

function create_fragment$6(ctx) {
	var div1, t0, div0, span0, t1, t2, input0, t3, label0, span1, t4, t5, input1, t6, label1, span2, t7, t8, t9, label2, span3, t10, t11, input2, t12, span4, t13_value = ctx.$compile_options.dev + "", t13, t14, t15, label3, span5, t16, t17, input3, t18, span6, t19_value = ctx.$compile_options.css + "", t19, t20, t21, label4, span7, t22, t23, input4, t24, span8, t25_value = ctx.$compile_options.hydratable + "", t25, t26, t27, label5, span9, t28, t29, input5, t30, span10, t31_value = ctx.$compile_options.customElement + "", t31, t32, t33, label6, span11, t34, t35, input6, t36, span12, t37_value = ctx.$compile_options.immutable + "", t37, t38, t39, label7, span13, t40, t41, input7, t42, span14, t43_value = ctx.$compile_options.legacy + "", t43, t44, dispose;

	const block = {
		c: function create() {
			div1 = element("div");
			t0 = text("result = svelte.compile(source, {\n\t");
			div0 = element("div");
			span0 = element("span");
			t1 = text("generate:");
			t2 = space();
			input0 = element("input");
			t3 = space();
			label0 = element("label");
			span1 = element("span");
			t4 = text("\"dom\"");
			t5 = space();
			input1 = element("input");
			t6 = space();
			label1 = element("label");
			span2 = element("span");
			t7 = text("\"ssr\"");
			t8 = text(",");
			t9 = space();
			label2 = element("label");
			span3 = element("span");
			t10 = text("dev:");
			t11 = space();
			input2 = element("input");
			t12 = space();
			span4 = element("span");
			t13 = text(t13_value);
			t14 = text(",");
			t15 = space();
			label3 = element("label");
			span5 = element("span");
			t16 = text("css:");
			t17 = space();
			input3 = element("input");
			t18 = space();
			span6 = element("span");
			t19 = text(t19_value);
			t20 = text(",");
			t21 = space();
			label4 = element("label");
			span7 = element("span");
			t22 = text("hydratable:");
			t23 = space();
			input4 = element("input");
			t24 = space();
			span8 = element("span");
			t25 = text(t25_value);
			t26 = text(",");
			t27 = space();
			label5 = element("label");
			span9 = element("span");
			t28 = text("customElement:");
			t29 = space();
			input5 = element("input");
			t30 = space();
			span10 = element("span");
			t31 = text(t31_value);
			t32 = text(",");
			t33 = space();
			label6 = element("label");
			span11 = element("span");
			t34 = text("immutable:");
			t35 = space();
			input6 = element("input");
			t36 = space();
			span12 = element("span");
			t37 = text(t37_value);
			t38 = text(",");
			t39 = space();
			label7 = element("label");
			span13 = element("span");
			t40 = text("legacy:");
			t41 = space();
			input7 = element("input");
			t42 = space();
			span14 = element("span");
			t43 = text(t43_value);
			t44 = text("\n\t});");
			this.h();
		},

		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true }, false);
			var div1_nodes = children(div1);

			t0 = claim_text(div1_nodes, "result = svelte.compile(source, {\n\t");

			div0 = claim_element(div1_nodes, "DIV", { class: true }, false);
			var div0_nodes = children(div0);

			span0 = claim_element(div0_nodes, "SPAN", { class: true }, false);
			var span0_nodes = children(span0);

			t1 = claim_text(span0_nodes, "generate:");
			span0_nodes.forEach(detach_dev);
			t2 = claim_space(div0_nodes);

			input0 = claim_element(div0_nodes, "INPUT", { id: true, type: true, value: true, class: true }, false);
			var input0_nodes = children(input0);

			input0_nodes.forEach(detach_dev);
			t3 = claim_space(div0_nodes);

			label0 = claim_element(div0_nodes, "LABEL", { for: true, class: true }, false);
			var label0_nodes = children(label0);

			span1 = claim_element(label0_nodes, "SPAN", { class: true }, false);
			var span1_nodes = children(span1);

			t4 = claim_text(span1_nodes, "\"dom\"");
			span1_nodes.forEach(detach_dev);
			label0_nodes.forEach(detach_dev);
			t5 = claim_space(div0_nodes);

			input1 = claim_element(div0_nodes, "INPUT", { id: true, type: true, value: true, class: true }, false);
			var input1_nodes = children(input1);

			input1_nodes.forEach(detach_dev);
			t6 = claim_space(div0_nodes);

			label1 = claim_element(div0_nodes, "LABEL", { for: true, class: true }, false);
			var label1_nodes = children(label1);

			span2 = claim_element(label1_nodes, "SPAN", { class: true }, false);
			var span2_nodes = children(span2);

			t7 = claim_text(span2_nodes, "\"ssr\"");
			span2_nodes.forEach(detach_dev);
			t8 = claim_text(label1_nodes, ",");
			label1_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t9 = claim_space(div1_nodes);

			label2 = claim_element(div1_nodes, "LABEL", { class: true }, false);
			var label2_nodes = children(label2);

			span3 = claim_element(label2_nodes, "SPAN", { class: true }, false);
			var span3_nodes = children(span3);

			t10 = claim_text(span3_nodes, "dev:");
			span3_nodes.forEach(detach_dev);
			t11 = claim_space(label2_nodes);

			input2 = claim_element(label2_nodes, "INPUT", { type: true, class: true }, false);
			var input2_nodes = children(input2);

			input2_nodes.forEach(detach_dev);
			t12 = claim_space(label2_nodes);

			span4 = claim_element(label2_nodes, "SPAN", { class: true }, false);
			var span4_nodes = children(span4);

			t13 = claim_text(span4_nodes, t13_value);
			span4_nodes.forEach(detach_dev);
			t14 = claim_text(label2_nodes, ",");
			label2_nodes.forEach(detach_dev);
			t15 = claim_space(div1_nodes);

			label3 = claim_element(div1_nodes, "LABEL", { class: true }, false);
			var label3_nodes = children(label3);

			span5 = claim_element(label3_nodes, "SPAN", { class: true }, false);
			var span5_nodes = children(span5);

			t16 = claim_text(span5_nodes, "css:");
			span5_nodes.forEach(detach_dev);
			t17 = claim_space(label3_nodes);

			input3 = claim_element(label3_nodes, "INPUT", { type: true, class: true }, false);
			var input3_nodes = children(input3);

			input3_nodes.forEach(detach_dev);
			t18 = claim_space(label3_nodes);

			span6 = claim_element(label3_nodes, "SPAN", { class: true }, false);
			var span6_nodes = children(span6);

			t19 = claim_text(span6_nodes, t19_value);
			span6_nodes.forEach(detach_dev);
			t20 = claim_text(label3_nodes, ",");
			label3_nodes.forEach(detach_dev);
			t21 = claim_space(div1_nodes);

			label4 = claim_element(div1_nodes, "LABEL", { class: true }, false);
			var label4_nodes = children(label4);

			span7 = claim_element(label4_nodes, "SPAN", { class: true }, false);
			var span7_nodes = children(span7);

			t22 = claim_text(span7_nodes, "hydratable:");
			span7_nodes.forEach(detach_dev);
			t23 = claim_space(label4_nodes);

			input4 = claim_element(label4_nodes, "INPUT", { type: true, class: true }, false);
			var input4_nodes = children(input4);

			input4_nodes.forEach(detach_dev);
			t24 = claim_space(label4_nodes);

			span8 = claim_element(label4_nodes, "SPAN", { class: true }, false);
			var span8_nodes = children(span8);

			t25 = claim_text(span8_nodes, t25_value);
			span8_nodes.forEach(detach_dev);
			t26 = claim_text(label4_nodes, ",");
			label4_nodes.forEach(detach_dev);
			t27 = claim_space(div1_nodes);

			label5 = claim_element(div1_nodes, "LABEL", { class: true }, false);
			var label5_nodes = children(label5);

			span9 = claim_element(label5_nodes, "SPAN", { class: true }, false);
			var span9_nodes = children(span9);

			t28 = claim_text(span9_nodes, "customElement:");
			span9_nodes.forEach(detach_dev);
			t29 = claim_space(label5_nodes);

			input5 = claim_element(label5_nodes, "INPUT", { type: true, class: true }, false);
			var input5_nodes = children(input5);

			input5_nodes.forEach(detach_dev);
			t30 = claim_space(label5_nodes);

			span10 = claim_element(label5_nodes, "SPAN", { class: true }, false);
			var span10_nodes = children(span10);

			t31 = claim_text(span10_nodes, t31_value);
			span10_nodes.forEach(detach_dev);
			t32 = claim_text(label5_nodes, ",");
			label5_nodes.forEach(detach_dev);
			t33 = claim_space(div1_nodes);

			label6 = claim_element(div1_nodes, "LABEL", { class: true }, false);
			var label6_nodes = children(label6);

			span11 = claim_element(label6_nodes, "SPAN", { class: true }, false);
			var span11_nodes = children(span11);

			t34 = claim_text(span11_nodes, "immutable:");
			span11_nodes.forEach(detach_dev);
			t35 = claim_space(label6_nodes);

			input6 = claim_element(label6_nodes, "INPUT", { type: true, class: true }, false);
			var input6_nodes = children(input6);

			input6_nodes.forEach(detach_dev);
			t36 = claim_space(label6_nodes);

			span12 = claim_element(label6_nodes, "SPAN", { class: true }, false);
			var span12_nodes = children(span12);

			t37 = claim_text(span12_nodes, t37_value);
			span12_nodes.forEach(detach_dev);
			t38 = claim_text(label6_nodes, ",");
			label6_nodes.forEach(detach_dev);
			t39 = claim_space(div1_nodes);

			label7 = claim_element(div1_nodes, "LABEL", { class: true }, false);
			var label7_nodes = children(label7);

			span13 = claim_element(label7_nodes, "SPAN", { class: true }, false);
			var span13_nodes = children(span13);

			t40 = claim_text(span13_nodes, "legacy:");
			span13_nodes.forEach(detach_dev);
			t41 = claim_space(label7_nodes);

			input7 = claim_element(label7_nodes, "INPUT", { type: true, class: true }, false);
			var input7_nodes = children(input7);

			input7_nodes.forEach(detach_dev);
			t42 = claim_space(label7_nodes);

			span14 = claim_element(label7_nodes, "SPAN", { class: true }, false);
			var span14_nodes = children(span14);

			t43 = claim_text(span14_nodes, t43_value);
			span14_nodes.forEach(detach_dev);
			label7_nodes.forEach(detach_dev);
			t44 = claim_text(div1_nodes, "\n\t});");
			div1_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(span0, "class", "key svelte-159cly1");
			add_location(span0, file$6, 107, 2, 1829);
			ctx.$$binding_groups[0].push(input0);
			attr_dev(input0, "id", "dom-input");
			attr_dev(input0, "type", "radio");
			input0.__value = "dom";
			input0.value = input0.__value;
			attr_dev(input0, "class", "svelte-159cly1");
			add_location(input0, file$6, 109, 2, 1867);
			attr_dev(span1, "class", "string svelte-159cly1");
			add_location(span1, file$6, 110, 25, 1979);
			attr_dev(label0, "for", "dom-input");
			attr_dev(label0, "class", "svelte-159cly1");
			add_location(label0, file$6, 110, 2, 1956);
			ctx.$$binding_groups[0].push(input1);
			attr_dev(input1, "id", "ssr-input");
			attr_dev(input1, "type", "radio");
			input1.__value = "ssr";
			input1.value = input1.__value;
			attr_dev(input1, "class", "svelte-159cly1");
			add_location(input1, file$6, 112, 2, 2024);
			attr_dev(span2, "class", "string svelte-159cly1");
			add_location(span2, file$6, 113, 25, 2136);
			attr_dev(label1, "for", "ssr-input");
			attr_dev(label1, "class", "svelte-159cly1");
			add_location(label1, file$6, 113, 2, 2113);
			attr_dev(div0, "class", "option svelte-159cly1");
			add_location(div0, file$6, 106, 1, 1806);
			attr_dev(span3, "class", "key svelte-159cly1");
			add_location(span3, file$6, 117, 2, 2214);
			attr_dev(input2, "type", "checkbox");
			attr_dev(input2, "class", "svelte-159cly1");
			add_location(input2, file$6, 118, 2, 2246);
			attr_dev(span4, "class", "boolean svelte-159cly1");
			add_location(span4, file$6, 118, 62, 2306);
			attr_dev(label2, "class", "option svelte-159cly1");
			add_location(label2, file$6, 116, 1, 2189);
			attr_dev(span5, "class", "key svelte-159cly1");
			add_location(span5, file$6, 122, 2, 2396);
			attr_dev(input3, "type", "checkbox");
			attr_dev(input3, "class", "svelte-159cly1");
			add_location(input3, file$6, 123, 2, 2428);
			attr_dev(span6, "class", "boolean svelte-159cly1");
			add_location(span6, file$6, 123, 62, 2488);
			attr_dev(label3, "class", "option svelte-159cly1");
			add_location(label3, file$6, 121, 1, 2371);
			attr_dev(span7, "class", "key svelte-159cly1");
			add_location(span7, file$6, 127, 2, 2578);
			attr_dev(input4, "type", "checkbox");
			attr_dev(input4, "class", "svelte-159cly1");
			add_location(input4, file$6, 128, 2, 2617);
			attr_dev(span8, "class", "boolean svelte-159cly1");
			add_location(span8, file$6, 128, 69, 2684);
			attr_dev(label4, "class", "option svelte-159cly1");
			add_location(label4, file$6, 126, 1, 2553);
			attr_dev(span9, "class", "key svelte-159cly1");
			add_location(span9, file$6, 132, 2, 2781);
			attr_dev(input5, "type", "checkbox");
			attr_dev(input5, "class", "svelte-159cly1");
			add_location(input5, file$6, 133, 2, 2823);
			attr_dev(span10, "class", "boolean svelte-159cly1");
			add_location(span10, file$6, 133, 72, 2893);
			attr_dev(label5, "class", "option svelte-159cly1");
			add_location(label5, file$6, 131, 1, 2756);
			attr_dev(span11, "class", "key svelte-159cly1");
			add_location(span11, file$6, 137, 2, 2993);
			attr_dev(input6, "type", "checkbox");
			attr_dev(input6, "class", "svelte-159cly1");
			add_location(input6, file$6, 138, 2, 3031);
			attr_dev(span12, "class", "boolean svelte-159cly1");
			add_location(span12, file$6, 138, 68, 3097);
			attr_dev(label6, "class", "option svelte-159cly1");
			add_location(label6, file$6, 136, 1, 2968);
			attr_dev(span13, "class", "key svelte-159cly1");
			add_location(span13, file$6, 142, 2, 3193);
			attr_dev(input7, "type", "checkbox");
			attr_dev(input7, "class", "svelte-159cly1");
			add_location(input7, file$6, 143, 2, 3228);
			attr_dev(span14, "class", "boolean svelte-159cly1");
			add_location(span14, file$6, 143, 65, 3291);
			attr_dev(label7, "class", "option svelte-159cly1");
			add_location(label7, file$6, 141, 1, 3168);
			attr_dev(div1, "class", "options svelte-159cly1");
			add_location(div1, file$6, 104, 0, 1743);

			dispose = [
				listen_dev(input0, "change", ctx.input0_change_handler),
				listen_dev(input1, "change", ctx.input1_change_handler),
				listen_dev(input2, "change", ctx.input2_change_handler),
				listen_dev(input3, "change", ctx.input3_change_handler),
				listen_dev(input4, "change", ctx.input4_change_handler),
				listen_dev(input5, "change", ctx.input5_change_handler),
				listen_dev(input6, "change", ctx.input6_change_handler),
				listen_dev(input7, "change", ctx.input7_change_handler)
			];
		},

		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, t0);
			append_dev(div1, div0);
			append_dev(div0, span0);
			append_dev(span0, t1);
			append_dev(div0, t2);
			append_dev(div0, input0);

			input0.checked = input0.__value === ctx.$compile_options.generate;

			append_dev(div0, t3);
			append_dev(div0, label0);
			append_dev(label0, span1);
			append_dev(span1, t4);
			append_dev(div0, t5);
			append_dev(div0, input1);

			input1.checked = input1.__value === ctx.$compile_options.generate;

			append_dev(div0, t6);
			append_dev(div0, label1);
			append_dev(label1, span2);
			append_dev(span2, t7);
			append_dev(label1, t8);
			append_dev(div1, t9);
			append_dev(div1, label2);
			append_dev(label2, span3);
			append_dev(span3, t10);
			append_dev(label2, t11);
			append_dev(label2, input2);

			input2.checked = ctx.$compile_options.dev;

			append_dev(label2, t12);
			append_dev(label2, span4);
			append_dev(span4, t13);
			append_dev(label2, t14);
			append_dev(div1, t15);
			append_dev(div1, label3);
			append_dev(label3, span5);
			append_dev(span5, t16);
			append_dev(label3, t17);
			append_dev(label3, input3);

			input3.checked = ctx.$compile_options.css;

			append_dev(label3, t18);
			append_dev(label3, span6);
			append_dev(span6, t19);
			append_dev(label3, t20);
			append_dev(div1, t21);
			append_dev(div1, label4);
			append_dev(label4, span7);
			append_dev(span7, t22);
			append_dev(label4, t23);
			append_dev(label4, input4);

			input4.checked = ctx.$compile_options.hydratable;

			append_dev(label4, t24);
			append_dev(label4, span8);
			append_dev(span8, t25);
			append_dev(label4, t26);
			append_dev(div1, t27);
			append_dev(div1, label5);
			append_dev(label5, span9);
			append_dev(span9, t28);
			append_dev(label5, t29);
			append_dev(label5, input5);

			input5.checked = ctx.$compile_options.customElement;

			append_dev(label5, t30);
			append_dev(label5, span10);
			append_dev(span10, t31);
			append_dev(label5, t32);
			append_dev(div1, t33);
			append_dev(div1, label6);
			append_dev(label6, span11);
			append_dev(span11, t34);
			append_dev(label6, t35);
			append_dev(label6, input6);

			input6.checked = ctx.$compile_options.immutable;

			append_dev(label6, t36);
			append_dev(label6, span12);
			append_dev(span12, t37);
			append_dev(label6, t38);
			append_dev(div1, t39);
			append_dev(div1, label7);
			append_dev(label7, span13);
			append_dev(span13, t40);
			append_dev(label7, t41);
			append_dev(label7, input7);

			input7.checked = ctx.$compile_options.legacy;

			append_dev(label7, t42);
			append_dev(label7, span14);
			append_dev(span14, t43);
			append_dev(div1, t44);
		},

		p: function update(changed, ctx) {
			if (changed.$compile_options) input0.checked = input0.__value === ctx.$compile_options.generate;
			if (changed.$compile_options) input1.checked = input1.__value === ctx.$compile_options.generate;
			if (changed.$compile_options) input2.checked = ctx.$compile_options.dev;

			if ((changed.$compile_options) && t13_value !== (t13_value = ctx.$compile_options.dev + "")) {
				set_data_dev(t13, t13_value);
			}

			if (changed.$compile_options) input3.checked = ctx.$compile_options.css;

			if ((changed.$compile_options) && t19_value !== (t19_value = ctx.$compile_options.css + "")) {
				set_data_dev(t19, t19_value);
			}

			if (changed.$compile_options) input4.checked = ctx.$compile_options.hydratable;

			if ((changed.$compile_options) && t25_value !== (t25_value = ctx.$compile_options.hydratable + "")) {
				set_data_dev(t25, t25_value);
			}

			if (changed.$compile_options) input5.checked = ctx.$compile_options.customElement;

			if ((changed.$compile_options) && t31_value !== (t31_value = ctx.$compile_options.customElement + "")) {
				set_data_dev(t31, t31_value);
			}

			if (changed.$compile_options) input6.checked = ctx.$compile_options.immutable;

			if ((changed.$compile_options) && t37_value !== (t37_value = ctx.$compile_options.immutable + "")) {
				set_data_dev(t37, t37_value);
			}

			if (changed.$compile_options) input7.checked = ctx.$compile_options.legacy;

			if ((changed.$compile_options) && t43_value !== (t43_value = ctx.$compile_options.legacy + "")) {
				set_data_dev(t43, t43_value);
			}
		},

		i: noop,
		o: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(div1);
			}

			ctx.$$binding_groups[0].splice(ctx.$$binding_groups[0].indexOf(input0), 1);
			ctx.$$binding_groups[0].splice(ctx.$$binding_groups[0].indexOf(input1), 1);
			run_all(dispose);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment$6.name, type: "component", source: "", ctx });
	return block;
}

function instance$6($$self, $$props, $$invalidate) {
	let $compile_options;

	const { compile_options } = getContext('REPL'); validate_store(compile_options, 'compile_options'); component_subscribe($$self, compile_options, $$value => { $compile_options = $$value; $$invalidate('$compile_options', $compile_options); });

	const $$binding_groups = [[]];

	function input0_change_handler() {
		compile_options.update($$value => ($$value.generate = this.__value, $$value));
	}

	function input1_change_handler() {
		compile_options.update($$value => ($$value.generate = this.__value, $$value));
	}

	function input2_change_handler() {
		compile_options.update($$value => ($$value.dev = this.checked, $$value));
	}

	function input3_change_handler() {
		compile_options.update($$value => ($$value.css = this.checked, $$value));
	}

	function input4_change_handler() {
		compile_options.update($$value => ($$value.hydratable = this.checked, $$value));
	}

	function input5_change_handler() {
		compile_options.update($$value => ($$value.customElement = this.checked, $$value));
	}

	function input6_change_handler() {
		compile_options.update($$value => ($$value.immutable = this.checked, $$value));
	}

	function input7_change_handler() {
		compile_options.update($$value => ($$value.legacy = this.checked, $$value));
	}

	$$self.$capture_state = () => {
		return {};
	};

	$$self.$inject_state = $$props => {
		if ('$compile_options' in $$props) compile_options.set($compile_options);
	};

	return {
		compile_options,
		$compile_options,
		input0_change_handler,
		input1_change_handler,
		input2_change_handler,
		input3_change_handler,
		input4_change_handler,
		input5_change_handler,
		input6_change_handler,
		input7_change_handler,
		$$binding_groups
	};
}

class CompilerOptions extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$6, create_fragment$6, safe_not_equal, []);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "CompilerOptions", options, id: create_fragment$6.name });
	}
}

const workers = new Map();

let uid$1 = 1;

class Compiler {
	constructor(workersUrl, svelteUrl) {
		if (!workers.has(svelteUrl)) {
			const worker = new Worker(`${workersUrl}/compiler.js`);
			worker.postMessage({ type: 'init', svelteUrl });
			workers.set(svelteUrl, worker);
		}

		this.worker = workers.get(svelteUrl);

		this.handlers = new Map();

		this.worker.addEventListener('message', event => {
			const handler = this.handlers.get(event.data.id);

			if (handler) { // if no handler, was meant for a different REPL
				handler(event.data.result);
				this.handlers.delete(event.data.id);
			}
		});
	}

	compile(component, options) {
		return new Promise(fulfil => {
			const id = uid$1++;

			this.handlers.set(id, fulfil);

			this.worker.postMessage({
				id,
				type: 'compile',
				source: component.source,
				options: Object.assign({
					name: component.name,
					filename: `${component.name}.svelte`
				}, options),
				entry: component.name === 'App'
			});
		});
	}

	destroy() {
		this.worker.terminate();
	}
}

/* node_modules\@sveltejs\svelte-repl\src\Output\index.svelte generated by Svelte v3.12.0 */

const file$7 = "node_modules\\@sveltejs\\svelte-repl\\src\\Output\\index.svelte";

// (156:1) {:else}
function create_else_block$2(ctx) {
	var current;

	var splitpane = new SplitPane({
		props: {
		type: "vertical",
		pos: 67,
		$$slots: {
		default: [create_default_slot$2],
		b: [create_b_slot],
		a: [create_a_slot]
	},
		$$scope: { ctx }
	},
		$$inline: true
	});

	const block = {
		c: function create() {
			splitpane.$$.fragment.c();
		},

		l: function claim(nodes) {
			splitpane.$$.fragment.l(nodes);
		},

		m: function mount(target, anchor) {
			mount_component(splitpane, target, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var splitpane_changes = {};
			if (changed.$$scope || changed.foo || changed.sourceErrorLoc || changed.js_editor) splitpane_changes.$$scope = { changed, ctx };
			splitpane.$set(splitpane_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(splitpane.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(splitpane.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			destroy_component(splitpane, detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_else_block$2.name, type: "else", source: "(156:1) {:else}", ctx });
	return block;
}

// (149:1) {#if embedded}
function create_if_block$6(ctx) {
	var current;

	let codemirror_props = {
		mode: "js",
		errorLoc: ctx.sourceErrorLoc,
		readonly: true
	};
	var codemirror = new CodeMirror_1({ props: codemirror_props, $$inline: true });

	ctx.codemirror_binding(codemirror);

	const block = {
		c: function create() {
			codemirror.$$.fragment.c();
		},

		l: function claim(nodes) {
			codemirror.$$.fragment.l(nodes);
		},

		m: function mount(target, anchor) {
			mount_component(codemirror, target, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var codemirror_changes = {};
			if (changed.sourceErrorLoc) codemirror_changes.errorLoc = ctx.sourceErrorLoc;
			codemirror.$set(codemirror_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(codemirror.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(codemirror.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			ctx.codemirror_binding(null);

			destroy_component(codemirror, detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block$6.name, type: "if", source: "(149:1) {#if embedded}", ctx });
	return block;
}

// (158:3) <div slot="a">
function create_a_slot(ctx) {
	var div, current;

	let codemirror_props = {
		mode: "js",
		errorLoc: ctx.sourceErrorLoc,
		readonly: true
	};
	var codemirror = new CodeMirror_1({ props: codemirror_props, $$inline: true });

	ctx.codemirror_binding_1(codemirror);

	const block = {
		c: function create() {
			div = element("div");
			codemirror.$$.fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { slot: true, class: true }, false);
			var div_nodes = children(div);

			codemirror.$$.fragment.l(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(div, "slot", "a");
			attr_dev(div, "class", "svelte-1p3b02q");
			add_location(div, file$7, 157, 3, 3315);
		},

		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			mount_component(codemirror, div, null);
			current = true;
		},

		p: function update(changed, ctx) {
			var codemirror_changes = {};
			if (changed.sourceErrorLoc) codemirror_changes.errorLoc = ctx.sourceErrorLoc;
			codemirror.$set(codemirror_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(codemirror.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(codemirror.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(div);
			}

			ctx.codemirror_binding_1(null);

			destroy_component(codemirror);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_a_slot.name, type: "slot", source: "(158:3) <div slot=\"a\">", ctx });
	return block;
}

// (167:3) <section slot="b">
function create_b_slot(ctx) {
	var section, h3, t0, t1, updating_foo, current;

	function compileroptions_foo_binding(value) {
		ctx.compileroptions_foo_binding.call(null, value);
		updating_foo = true;
		add_flush_callback(() => updating_foo = false);
	}

	let compileroptions_props = {};
	if (ctx.foo !== void 0) {
		compileroptions_props.foo = ctx.foo;
	}
	var compileroptions = new CompilerOptions({
		props: compileroptions_props,
		$$inline: true
	});

	binding_callbacks.push(() => bind(compileroptions, 'foo', compileroptions_foo_binding));

	const block = {
		c: function create() {
			section = element("section");
			h3 = element("h3");
			t0 = text("Compiler options");
			t1 = space();
			compileroptions.$$.fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { slot: true, class: true }, false);
			var section_nodes = children(section);

			h3 = claim_element(section_nodes, "H3", { class: true }, false);
			var h3_nodes = children(h3);

			t0 = claim_text(h3_nodes, "Compiler options");
			h3_nodes.forEach(detach_dev);
			t1 = claim_space(section_nodes);
			compileroptions.$$.fragment.l(section_nodes);
			section_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(h3, "class", "svelte-1p3b02q");
			add_location(h3, file$7, 167, 4, 3477);
			attr_dev(section, "slot", "b");
			attr_dev(section, "class", "svelte-1p3b02q");
			add_location(section, file$7, 166, 3, 3454);
		},

		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			append_dev(section, h3);
			append_dev(h3, t0);
			append_dev(section, t1);
			mount_component(compileroptions, section, null);
			current = true;
		},

		p: function update(changed, ctx) {
			var compileroptions_changes = {};
			if (!updating_foo && changed.foo) {
				compileroptions_changes.foo = ctx.foo;
			}
			compileroptions.$set(compileroptions_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(compileroptions.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(compileroptions.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(section);
			}

			destroy_component(compileroptions);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_b_slot.name, type: "slot", source: "(167:3) <section slot=\"b\">", ctx });
	return block;
}

// (157:2) <SplitPane type="vertical" pos={67}>
function create_default_slot$2(ctx) {
	var t;

	const block = {
		c: function create() {
			t = space();
		},

		l: function claim(nodes) {
			t = claim_space(nodes);
		},

		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},

		p: noop,
		i: noop,
		o: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(t);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_default_slot$2.name, type: "slot", source: "(157:2) <SplitPane type=\"vertical\" pos={67}>", ctx });
	return block;
}

function create_fragment$7(ctx) {
	var div0, button0, t0, t1, button1, t2, t3, button2, t4, t5, div1, updating_error, t6, div2, current_block_type_index, if_block, t7, div3, current, dispose;

	function viewer_1_error_binding(value) {
		ctx.viewer_1_error_binding.call(null, value);
		updating_error = true;
		add_flush_callback(() => updating_error = false);
	}

	let viewer_1_props = {
		status: ctx.status,
		relaxed: ctx.relaxed,
		injectedJS: ctx.injectedJS,
		injectedCSS: ctx.injectedCSS
	};
	if (ctx.runtimeError !== void 0) {
		viewer_1_props.error = ctx.runtimeError;
	}
	var viewer_1 = new Viewer({ props: viewer_1_props, $$inline: true });

	ctx.viewer_1_binding(viewer_1);
	binding_callbacks.push(() => bind(viewer_1, 'error', viewer_1_error_binding));

	var if_block_creators = [
		create_if_block$6,
		create_else_block$2
	];

	var if_blocks = [];

	function select_block_type(changed, ctx) {
		if (ctx.embedded) return 0;
		return 1;
	}

	current_block_type_index = select_block_type(null, ctx);
	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	let codemirror_props = {
		mode: "css",
		errorLoc: ctx.sourceErrorLoc,
		readonly: true
	};
	var codemirror = new CodeMirror_1({ props: codemirror_props, $$inline: true });

	ctx.codemirror_binding_2(codemirror);

	const block = {
		c: function create() {
			div0 = element("div");
			button0 = element("button");
			t0 = text("Result");
			t1 = space();
			button1 = element("button");
			t2 = text("JS output");
			t3 = space();
			button2 = element("button");
			t4 = text("CSS output");
			t5 = space();
			div1 = element("div");
			viewer_1.$$.fragment.c();
			t6 = space();
			div2 = element("div");
			if_block.c();
			t7 = space();
			div3 = element("div");
			codemirror.$$.fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			div0 = claim_element(nodes, "DIV", { class: true }, false);
			var div0_nodes = children(div0);

			button0 = claim_element(div0_nodes, "BUTTON", { class: true }, false);
			var button0_nodes = children(button0);

			t0 = claim_text(button0_nodes, "Result");
			button0_nodes.forEach(detach_dev);
			t1 = claim_space(div0_nodes);

			button1 = claim_element(div0_nodes, "BUTTON", { class: true }, false);
			var button1_nodes = children(button1);

			t2 = claim_text(button1_nodes, "JS output");
			button1_nodes.forEach(detach_dev);
			t3 = claim_space(div0_nodes);

			button2 = claim_element(div0_nodes, "BUTTON", { class: true }, false);
			var button2_nodes = children(button2);

			t4 = claim_text(button2_nodes, "CSS output");
			button2_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t5 = claim_space(nodes);

			div1 = claim_element(nodes, "DIV", { class: true }, false);
			var div1_nodes = children(div1);

			viewer_1.$$.fragment.l(div1_nodes);
			div1_nodes.forEach(detach_dev);
			t6 = claim_space(nodes);

			div2 = claim_element(nodes, "DIV", { class: true }, false);
			var div2_nodes = children(div2);

			if_block.l(div2_nodes);
			div2_nodes.forEach(detach_dev);
			t7 = claim_space(nodes);

			div3 = claim_element(nodes, "DIV", { class: true }, false);
			var div3_nodes = children(div3);

			codemirror.$$.fragment.l(div3_nodes);
			div3_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(button0, "class", "svelte-1p3b02q");
			toggle_class(button0, "active", ctx.view === 'result');
			add_location(button0, file$7, 118, 1, 2556);
			attr_dev(button1, "class", "svelte-1p3b02q");
			toggle_class(button1, "active", ctx.view === 'js');
			add_location(button1, file$7, 123, 1, 2658);
			attr_dev(button2, "class", "svelte-1p3b02q");
			toggle_class(button2, "active", ctx.view === 'css');
			add_location(button2, file$7, 128, 1, 2755);
			attr_dev(div0, "class", "view-toggle svelte-1p3b02q");
			add_location(div0, file$7, 117, 0, 2529);
			attr_dev(div1, "class", "tab-content svelte-1p3b02q");
			toggle_class(div1, "visible", ctx.view === 'result');
			add_location(div1, file$7, 135, 0, 2887);
			attr_dev(div2, "class", "tab-content svelte-1p3b02q");
			toggle_class(div2, "visible", ctx.view === 'js');
			add_location(div2, file$7, 147, 0, 3092);
			attr_dev(div3, "class", "tab-content svelte-1p3b02q");
			toggle_class(div3, "visible", ctx.view === 'css');
			add_location(div3, file$7, 176, 0, 3606);

			dispose = [
				listen_dev(button0, "click", ctx.click_handler),
				listen_dev(button1, "click", ctx.click_handler_1),
				listen_dev(button2, "click", ctx.click_handler_2)
			];
		},

		m: function mount(target, anchor) {
			insert_dev(target, div0, anchor);
			append_dev(div0, button0);
			append_dev(button0, t0);
			append_dev(div0, t1);
			append_dev(div0, button1);
			append_dev(button1, t2);
			append_dev(div0, t3);
			append_dev(div0, button2);
			append_dev(button2, t4);
			insert_dev(target, t5, anchor);
			insert_dev(target, div1, anchor);
			mount_component(viewer_1, div1, null);
			insert_dev(target, t6, anchor);
			insert_dev(target, div2, anchor);
			if_blocks[current_block_type_index].m(div2, null);
			insert_dev(target, t7, anchor);
			insert_dev(target, div3, anchor);
			mount_component(codemirror, div3, null);
			current = true;
		},

		p: function update(changed, ctx) {
			if (changed.view) {
				toggle_class(button0, "active", ctx.view === 'result');
				toggle_class(button1, "active", ctx.view === 'js');
				toggle_class(button2, "active", ctx.view === 'css');
			}

			var viewer_1_changes = {};
			if (changed.status) viewer_1_changes.status = ctx.status;
			if (changed.relaxed) viewer_1_changes.relaxed = ctx.relaxed;
			if (changed.injectedJS) viewer_1_changes.injectedJS = ctx.injectedJS;
			if (changed.injectedCSS) viewer_1_changes.injectedCSS = ctx.injectedCSS;
			if (!updating_error && changed.runtimeError) {
				viewer_1_changes.error = ctx.runtimeError;
			}
			viewer_1.$set(viewer_1_changes);

			if (changed.view) {
				toggle_class(div1, "visible", ctx.view === 'result');
			}

			var previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(changed, ctx);
			if (current_block_type_index === previous_block_index) {
				if_blocks[current_block_type_index].p(changed, ctx);
			} else {
				group_outros();
				transition_out(if_blocks[previous_block_index], 1, 1, () => {
					if_blocks[previous_block_index] = null;
				});
				check_outros();

				if_block = if_blocks[current_block_type_index];
				if (!if_block) {
					if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
					if_block.c();
				}
				transition_in(if_block, 1);
				if_block.m(div2, null);
			}

			if (changed.view) {
				toggle_class(div2, "visible", ctx.view === 'js');
			}

			var codemirror_changes = {};
			if (changed.sourceErrorLoc) codemirror_changes.errorLoc = ctx.sourceErrorLoc;
			codemirror.$set(codemirror_changes);

			if (changed.view) {
				toggle_class(div3, "visible", ctx.view === 'css');
			}
		},

		i: function intro(local) {
			if (current) return;
			transition_in(viewer_1.$$.fragment, local);

			transition_in(if_block);

			transition_in(codemirror.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(viewer_1.$$.fragment, local);
			transition_out(if_block);
			transition_out(codemirror.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(div0);
				detach_dev(t5);
				detach_dev(div1);
			}

			ctx.viewer_1_binding(null);

			destroy_component(viewer_1);

			if (detaching) {
				detach_dev(t6);
				detach_dev(div2);
			}

			if_blocks[current_block_type_index].d();

			if (detaching) {
				detach_dev(t7);
				detach_dev(div3);
			}

			ctx.codemirror_binding_2(null);

			destroy_component(codemirror);

			run_all(dispose);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment$7.name, type: "component", source: "", ctx });
	return block;
}

function instance$7($$self, $$props, $$invalidate) {
	

	const { register_output } = getContext('REPL');

	let { svelteUrl, workersUrl, status, sourceErrorLoc = null, runtimeError = null, embedded = false, relaxed = false, injectedJS, injectedCSS } = $$props;

	let foo; // TODO workaround for https://github.com/sveltejs/svelte/issues/2122

	register_output({
		set: async (selected, options) => {
			if (selected.type === 'js') {
				js_editor.set(`/* Select a component to see its compiled code */`);
				css_editor.set(`/* Select a component to see its compiled code */`);
				return;
			}

			const compiled = await compiler.compile(selected, options);
			if (!js_editor) return; // unmounted

			js_editor.set(compiled.js, 'js');
			css_editor.set(compiled.css, 'css');
		},

		update: async (selected, options) => {
			if (selected.type === 'js') return;

			const compiled = await compiler.compile(selected, options);
			if (!js_editor) return; // unmounted

			js_editor.update(compiled.js);
			css_editor.update(compiled.css);
		}
	});

	const compiler = is_browser && new Compiler(workersUrl, svelteUrl);

	// refs
	let viewer;
	let js_editor;
	let css_editor;

	let view = 'result';

	const writable_props = ['svelteUrl', 'workersUrl', 'status', 'sourceErrorLoc', 'runtimeError', 'embedded', 'relaxed', 'injectedJS', 'injectedCSS'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<Index> was created with unknown prop '${key}'`);
	});

	const click_handler = () => $$invalidate('view', view = 'result');

	const click_handler_1 = () => $$invalidate('view', view = 'js');

	const click_handler_2 = () => $$invalidate('view', view = 'css');

	function viewer_1_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			$$invalidate('viewer', viewer = $$value);
		});
	}

	function viewer_1_error_binding(value) {
		runtimeError = value;
		$$invalidate('runtimeError', runtimeError);
	}

	function codemirror_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			$$invalidate('js_editor', js_editor = $$value);
		});
	}

	function codemirror_binding_1($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			$$invalidate('js_editor', js_editor = $$value);
		});
	}

	function compileroptions_foo_binding(value) {
		foo = value;
		$$invalidate('foo', foo);
	}

	function codemirror_binding_2($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			$$invalidate('css_editor', css_editor = $$value);
		});
	}

	$$self.$set = $$props => {
		if ('svelteUrl' in $$props) $$invalidate('svelteUrl', svelteUrl = $$props.svelteUrl);
		if ('workersUrl' in $$props) $$invalidate('workersUrl', workersUrl = $$props.workersUrl);
		if ('status' in $$props) $$invalidate('status', status = $$props.status);
		if ('sourceErrorLoc' in $$props) $$invalidate('sourceErrorLoc', sourceErrorLoc = $$props.sourceErrorLoc);
		if ('runtimeError' in $$props) $$invalidate('runtimeError', runtimeError = $$props.runtimeError);
		if ('embedded' in $$props) $$invalidate('embedded', embedded = $$props.embedded);
		if ('relaxed' in $$props) $$invalidate('relaxed', relaxed = $$props.relaxed);
		if ('injectedJS' in $$props) $$invalidate('injectedJS', injectedJS = $$props.injectedJS);
		if ('injectedCSS' in $$props) $$invalidate('injectedCSS', injectedCSS = $$props.injectedCSS);
	};

	$$self.$capture_state = () => {
		return { svelteUrl, workersUrl, status, sourceErrorLoc, runtimeError, embedded, relaxed, injectedJS, injectedCSS, foo, viewer, js_editor, css_editor, view };
	};

	$$self.$inject_state = $$props => {
		if ('svelteUrl' in $$props) $$invalidate('svelteUrl', svelteUrl = $$props.svelteUrl);
		if ('workersUrl' in $$props) $$invalidate('workersUrl', workersUrl = $$props.workersUrl);
		if ('status' in $$props) $$invalidate('status', status = $$props.status);
		if ('sourceErrorLoc' in $$props) $$invalidate('sourceErrorLoc', sourceErrorLoc = $$props.sourceErrorLoc);
		if ('runtimeError' in $$props) $$invalidate('runtimeError', runtimeError = $$props.runtimeError);
		if ('embedded' in $$props) $$invalidate('embedded', embedded = $$props.embedded);
		if ('relaxed' in $$props) $$invalidate('relaxed', relaxed = $$props.relaxed);
		if ('injectedJS' in $$props) $$invalidate('injectedJS', injectedJS = $$props.injectedJS);
		if ('injectedCSS' in $$props) $$invalidate('injectedCSS', injectedCSS = $$props.injectedCSS);
		if ('foo' in $$props) $$invalidate('foo', foo = $$props.foo);
		if ('viewer' in $$props) $$invalidate('viewer', viewer = $$props.viewer);
		if ('js_editor' in $$props) $$invalidate('js_editor', js_editor = $$props.js_editor);
		if ('css_editor' in $$props) $$invalidate('css_editor', css_editor = $$props.css_editor);
		if ('view' in $$props) $$invalidate('view', view = $$props.view);
	};

	return {
		svelteUrl,
		workersUrl,
		status,
		sourceErrorLoc,
		runtimeError,
		embedded,
		relaxed,
		injectedJS,
		injectedCSS,
		foo,
		viewer,
		js_editor,
		css_editor,
		view,
		click_handler,
		click_handler_1,
		click_handler_2,
		viewer_1_binding,
		viewer_1_error_binding,
		codemirror_binding,
		codemirror_binding_1,
		compileroptions_foo_binding,
		codemirror_binding_2
	};
}

class Index extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$7, create_fragment$7, safe_not_equal, ["svelteUrl", "workersUrl", "status", "sourceErrorLoc", "runtimeError", "embedded", "relaxed", "injectedJS", "injectedCSS"]);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "Index", options, id: create_fragment$7.name });

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.svelteUrl === undefined && !('svelteUrl' in props)) {
			console.warn("<Index> was created without expected prop 'svelteUrl'");
		}
		if (ctx.workersUrl === undefined && !('workersUrl' in props)) {
			console.warn("<Index> was created without expected prop 'workersUrl'");
		}
		if (ctx.status === undefined && !('status' in props)) {
			console.warn("<Index> was created without expected prop 'status'");
		}
		if (ctx.injectedJS === undefined && !('injectedJS' in props)) {
			console.warn("<Index> was created without expected prop 'injectedJS'");
		}
		if (ctx.injectedCSS === undefined && !('injectedCSS' in props)) {
			console.warn("<Index> was created without expected prop 'injectedCSS'");
		}
	}

	get svelteUrl() {
		throw new Error("<Index>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set svelteUrl(value) {
		throw new Error("<Index>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get workersUrl() {
		throw new Error("<Index>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set workersUrl(value) {
		throw new Error("<Index>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get status() {
		throw new Error("<Index>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set status(value) {
		throw new Error("<Index>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get sourceErrorLoc() {
		throw new Error("<Index>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set sourceErrorLoc(value) {
		throw new Error("<Index>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get runtimeError() {
		throw new Error("<Index>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set runtimeError(value) {
		throw new Error("<Index>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get embedded() {
		throw new Error("<Index>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set embedded(value) {
		throw new Error("<Index>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get relaxed() {
		throw new Error("<Index>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set relaxed(value) {
		throw new Error("<Index>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get injectedJS() {
		throw new Error("<Index>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set injectedJS(value) {
		throw new Error("<Index>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get injectedCSS() {
		throw new Error("<Index>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set injectedCSS(value) {
		throw new Error("<Index>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

const workers$1 = new Map();

let uid$2 = 1;

class Bundler {
	constructor({ workersUrl, packagesUrl, svelteUrl, onstatus }) {
		const hash = `${packagesUrl}:${svelteUrl}`;

		if (!workers$1.has(hash)) {
			const worker = new Worker(`${workersUrl}/bundler.js`);
			worker.postMessage({ type: 'init', packagesUrl, svelteUrl });
			workers$1.set(hash, worker);
		}

		this.worker = workers$1.get(hash);

		this.handlers = new Map();

		this.worker.addEventListener('message', event => {
			const handler = this.handlers.get(event.data.uid);

			if (handler) { // if no handler, was meant for a different REPL
				if (event.data.type === 'status') {
					onstatus(event.data.message);
					return;
				}

				onstatus(null);
				handler(event.data);
				this.handlers.delete(event.data.uid);
			}
		});
	}

	bundle(components) {
		return new Promise(fulfil => {
			this.handlers.set(uid$2, fulfil);

			this.worker.postMessage({
				uid: uid$2,
				type: 'bundle',
				components
			});

			uid$2 += 1;
		});
	}

	destroy() {
		this.worker.terminate();
	}
}

/* node_modules\@sveltejs\svelte-repl\src\Repl.svelte generated by Svelte v3.12.0 */
const { Error: Error_1 } = globals;

const file$8 = "node_modules\\@sveltejs\\svelte-repl\\src\\Repl.svelte";

// (224:2) <section slot=a>
function create_a_slot$1(ctx) {
	var section, t, current;

	var componentselector = new ComponentSelector({
		props: { handle_select: ctx.handle_select },
		$$inline: true
	});

	let moduleeditor_props = { errorLoc: ctx.sourceErrorLoc || ctx.runtimeErrorLoc };
	var moduleeditor = new ModuleEditor({
		props: moduleeditor_props,
		$$inline: true
	});

	ctx.moduleeditor_binding(moduleeditor);

	const block = {
		c: function create() {
			section = element("section");
			componentselector.$$.fragment.c();
			t = space();
			moduleeditor.$$.fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { slot: true }, false);
			var section_nodes = children(section);

			componentselector.$$.fragment.l(section_nodes);
			t = claim_space(section_nodes);
			moduleeditor.$$.fragment.l(section_nodes);
			section_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(section, "slot", "a");
			add_location(section, file$8, 223, 2, 5336);
		},

		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			mount_component(componentselector, section, null);
			append_dev(section, t);
			mount_component(moduleeditor, section, null);
			current = true;
		},

		p: function update_1(changed, ctx) {
			var moduleeditor_changes = {};
			moduleeditor.$set(moduleeditor_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(componentselector.$$.fragment, local);

			transition_in(moduleeditor.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(componentselector.$$.fragment, local);
			transition_out(moduleeditor.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(section);
			}

			destroy_component(componentselector);

			ctx.moduleeditor_binding(null);

			destroy_component(moduleeditor);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_a_slot$1.name, type: "slot", source: "(224:2) <section slot=a>", ctx });
	return block;
}

// (229:2) <section slot=b style='height: 100%;'>
function create_b_slot$1(ctx) {
	var section, current;

	var output_1 = new Index({
		props: {
		svelteUrl: ctx.svelteUrl,
		workersUrl: ctx.workersUrl,
		status: ctx.status,
		embedded: ctx.embedded,
		relaxed: ctx.relaxed,
		injectedJS: ctx.injectedJS,
		injectedCSS: ctx.injectedCSS
	},
		$$inline: true
	});

	const block = {
		c: function create() {
			section = element("section");
			output_1.$$.fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { slot: true, style: true }, false);
			var section_nodes = children(section);

			output_1.$$.fragment.l(section_nodes);
			section_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(section, "slot", "b");
			set_style(section, "height", "100%");
			add_location(section, file$8, 228, 2, 5493);
		},

		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			mount_component(output_1, section, null);
			current = true;
		},

		p: function update_1(changed, ctx) {
			var output_1_changes = {};
			if (changed.svelteUrl) output_1_changes.svelteUrl = ctx.svelteUrl;
			if (changed.workersUrl) output_1_changes.workersUrl = ctx.workersUrl;
			if (changed.status) output_1_changes.status = ctx.status;
			if (changed.embedded) output_1_changes.embedded = ctx.embedded;
			if (changed.relaxed) output_1_changes.relaxed = ctx.relaxed;
			if (changed.injectedJS) output_1_changes.injectedJS = ctx.injectedJS;
			if (changed.injectedCSS) output_1_changes.injectedCSS = ctx.injectedCSS;
			output_1.$set(output_1_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(output_1.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(output_1.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(section);
			}

			destroy_component(output_1);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_b_slot$1.name, type: "slot", source: "(229:2) <section slot=b style='height: 100%;'>", ctx });
	return block;
}

// (219:1) <SplitPane   type="{orientation === 'rows' ? 'vertical' : 'horizontal'}"   pos="{fixed ? fixedPos : orientation === 'rows' ? 50 : 60}"   {fixed}  >
function create_default_slot$3(ctx) {
	var t;

	const block = {
		c: function create() {
			t = space();
		},

		l: function claim(nodes) {
			t = claim_space(nodes);
		},

		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},

		p: noop,
		i: noop,
		o: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(t);
			}
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_default_slot$3.name, type: "slot", source: "(219:1) <SplitPane   type=\"{orientation === 'rows' ? 'vertical' : 'horizontal'}\"   pos=\"{fixed ? fixedPos : orientation === 'rows' ? 50 : 60}\"   {fixed}  >", ctx });
	return block;
}

function create_fragment$8(ctx) {
	var div, current;

	var splitpane = new SplitPane({
		props: {
		type: ctx.orientation === 'rows' ? 'vertical' : 'horizontal',
		pos: ctx.fixed ? ctx.fixedPos : ctx.orientation === 'rows' ? 50 : 60,
		fixed: ctx.fixed,
		$$slots: {
		default: [create_default_slot$3],
		b: [create_b_slot$1],
		a: [create_a_slot$1]
	},
		$$scope: { ctx }
	},
		$$inline: true
	});

	const block = {
		c: function create() {
			div = element("div");
			splitpane.$$.fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true }, false);
			var div_nodes = children(div);

			splitpane.$$.fragment.l(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(div, "class", "container svelte-177xqak");
			toggle_class(div, "orientation", ctx.orientation);
			add_location(div, file$8, 217, 0, 5143);
		},

		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			mount_component(splitpane, div, null);
			current = true;
		},

		p: function update_1(changed, ctx) {
			var splitpane_changes = {};
			if (changed.orientation) splitpane_changes.type = ctx.orientation === 'rows' ? 'vertical' : 'horizontal';
			if (changed.fixed || changed.fixedPos || changed.orientation) splitpane_changes.pos = ctx.fixed ? ctx.fixedPos : ctx.orientation === 'rows' ? 50 : 60;
			if (changed.fixed) splitpane_changes.fixed = ctx.fixed;
			if (changed.$$scope || changed.svelteUrl || changed.workersUrl || changed.status || changed.embedded || changed.relaxed || changed.injectedJS || changed.injectedCSS || changed.input) splitpane_changes.$$scope = { changed, ctx };
			splitpane.$set(splitpane_changes);

			if (changed.orientation) {
				toggle_class(div, "orientation", ctx.orientation);
			}
		},

		i: function intro(local) {
			if (current) return;
			transition_in(splitpane.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(splitpane.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(div);
			}

			destroy_component(splitpane);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment$8.name, type: "component", source: "", ctx });
	return block;
}

function instance$8($$self, $$props, $$invalidate) {
	let $bundle, $components, $selected, $compile_options;

	

	let { workersUrl, packagesUrl = 'https://unpkg.com', svelteUrl = `${packagesUrl}/svelte`, embedded = false, orientation = 'columns', relaxed = false, fixed = false, fixedPos = 50, injectedJS = '', injectedCSS = '' } = $$props;

	function toJSON() {

		return {
			imports: $bundle.imports,
			components: $components
		};
	}

	async function set(data) {
		components.set(data.components);
		selected.set(data.components[0]);

		rebundle();

		await module_editor_ready;
		await output_ready;

		$$invalidate('injectedCSS', injectedCSS = data.css || '');
		module_editor.set($selected.source, $selected.type);
		output.set($selected, $compile_options);
	}

	function update(data) {
		const { name, type } = $selected || {};

		components.set(data.components);

		const matched_component = data.components.find(file => file.name === name && file.type === type);
		selected.set(matched_component || data.components[0]);

		$$invalidate('injectedCSS', injectedCSS = data.css || '');

		if (matched_component) {
			module_editor.update(matched_component.source);
			output.update(matched_component, $compile_options);
		} else {
			module_editor.set(matched_component.source, matched_component.type);
			output.set(matched_component, $compile_options);
		}
	}

	if (!workersUrl) {
		throw new Error(`You must supply workersUrl prop to <Repl>`);
	}

	const dispatch = createEventDispatcher();

	const components = writable([]); validate_store(components, 'components'); component_subscribe($$self, components, $$value => { $components = $$value; $$invalidate('$components', $components); });
	const selected = writable(null); validate_store(selected, 'selected'); component_subscribe($$self, selected, $$value => { $selected = $$value; $$invalidate('$selected', $selected); });
	const bundle = writable(null); validate_store(bundle, 'bundle'); component_subscribe($$self, bundle, $$value => { $bundle = $$value; $$invalidate('$bundle', $bundle); });

	const compile_options = writable({
		generate: 'dom',
		dev: false,
		css: false,
		hydratable: false,
		customElement: false,
		immutable: false,
		legacy: false
	}); validate_store(compile_options, 'compile_options'); component_subscribe($$self, compile_options, $$value => { $compile_options = $$value; $$invalidate('$compile_options', $compile_options); });

	let module_editor;
	let output;

	let current_token;
	async function rebundle() {
		const token = current_token = {};
		const result = await bundler.bundle($components);
		if (result && token === current_token) bundle.set(result);
	}

	// TODO this is a horrible kludge, written in a panic. fix it
	let fulfil_module_editor_ready;
	let module_editor_ready = new Promise(f => fulfil_module_editor_ready = f);

	let fulfil_output_ready;
	let output_ready = new Promise(f => fulfil_output_ready = f);


	setContext('REPL', {
		components,
		selected,
		bundle,
		compile_options,

		rebundle,

		navigate: item => {
			const match = /^(.+)\.(\w+)$/.exec(item.filename);
			if (!match) return; // ???

			const [, name, type] = match;
			const component = $components.find(c => c.name === name && c.type === type);
			handle_select(component);

			// TODO select the line/column in question
		},

		handle_change: event => {
			selected.update(component => {
				// TODO this is a bit hacky — we're relying on mutability
				// so that updating components works... might be better
				// if a) components had unique IDs, b) we tracked selected
				// *index* rather than component, and c) `selected` was
				// derived from `components` and `index`
				component.source = event.detail.value;
				return component;
			});

			components.update(c => c);

			// recompile selected component
			output.update($selected, $compile_options);

			rebundle();

			dispatch('change', {
				components: $components
			});
		},

		register_module_editor(editor) {
			module_editor = editor;
			fulfil_module_editor_ready();
		},

		register_output(handlers) {
			$$invalidate('output', output = handlers);
			fulfil_output_ready();
		},

		request_focus() {
			module_editor.focus();
		}
	});

	function handle_select(component) {
		selected.set(component);
		module_editor.set(component.source, component.type);
		output.set($selected, $compile_options);
	}

	let input;
	let sourceErrorLoc;
	let runtimeErrorLoc; // TODO refactor this stuff — runtimeErrorLoc is unused
	let status = null;

	const bundler = is_browser && new Bundler({
		workersUrl,
		packagesUrl,
		svelteUrl,
		onstatus: message => {
			$$invalidate('status', status = message);
		}
	});

	const writable_props = ['workersUrl', 'packagesUrl', 'svelteUrl', 'embedded', 'orientation', 'relaxed', 'fixed', 'fixedPos', 'injectedJS', 'injectedCSS'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<Repl> was created with unknown prop '${key}'`);
	});

	function moduleeditor_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			$$invalidate('input', input = $$value);
		});
	}

	$$self.$set = $$props => {
		if ('workersUrl' in $$props) $$invalidate('workersUrl', workersUrl = $$props.workersUrl);
		if ('packagesUrl' in $$props) $$invalidate('packagesUrl', packagesUrl = $$props.packagesUrl);
		if ('svelteUrl' in $$props) $$invalidate('svelteUrl', svelteUrl = $$props.svelteUrl);
		if ('embedded' in $$props) $$invalidate('embedded', embedded = $$props.embedded);
		if ('orientation' in $$props) $$invalidate('orientation', orientation = $$props.orientation);
		if ('relaxed' in $$props) $$invalidate('relaxed', relaxed = $$props.relaxed);
		if ('fixed' in $$props) $$invalidate('fixed', fixed = $$props.fixed);
		if ('fixedPos' in $$props) $$invalidate('fixedPos', fixedPos = $$props.fixedPos);
		if ('injectedJS' in $$props) $$invalidate('injectedJS', injectedJS = $$props.injectedJS);
		if ('injectedCSS' in $$props) $$invalidate('injectedCSS', injectedCSS = $$props.injectedCSS);
	};

	$$self.$capture_state = () => {
		return { workersUrl, packagesUrl, svelteUrl, embedded, orientation, relaxed, fixed, fixedPos, injectedJS, injectedCSS, module_editor, output, current_token, fulfil_module_editor_ready, module_editor_ready, fulfil_output_ready, output_ready, input, sourceErrorLoc, runtimeErrorLoc, status, $bundle, $components, $selected, $compile_options };
	};

	$$self.$inject_state = $$props => {
		if ('workersUrl' in $$props) $$invalidate('workersUrl', workersUrl = $$props.workersUrl);
		if ('packagesUrl' in $$props) $$invalidate('packagesUrl', packagesUrl = $$props.packagesUrl);
		if ('svelteUrl' in $$props) $$invalidate('svelteUrl', svelteUrl = $$props.svelteUrl);
		if ('embedded' in $$props) $$invalidate('embedded', embedded = $$props.embedded);
		if ('orientation' in $$props) $$invalidate('orientation', orientation = $$props.orientation);
		if ('relaxed' in $$props) $$invalidate('relaxed', relaxed = $$props.relaxed);
		if ('fixed' in $$props) $$invalidate('fixed', fixed = $$props.fixed);
		if ('fixedPos' in $$props) $$invalidate('fixedPos', fixedPos = $$props.fixedPos);
		if ('injectedJS' in $$props) $$invalidate('injectedJS', injectedJS = $$props.injectedJS);
		if ('injectedCSS' in $$props) $$invalidate('injectedCSS', injectedCSS = $$props.injectedCSS);
		if ('module_editor' in $$props) module_editor = $$props.module_editor;
		if ('output' in $$props) $$invalidate('output', output = $$props.output);
		if ('current_token' in $$props) current_token = $$props.current_token;
		if ('fulfil_module_editor_ready' in $$props) fulfil_module_editor_ready = $$props.fulfil_module_editor_ready;
		if ('module_editor_ready' in $$props) module_editor_ready = $$props.module_editor_ready;
		if ('fulfil_output_ready' in $$props) fulfil_output_ready = $$props.fulfil_output_ready;
		if ('output_ready' in $$props) output_ready = $$props.output_ready;
		if ('input' in $$props) $$invalidate('input', input = $$props.input);
		if ('sourceErrorLoc' in $$props) $$invalidate('sourceErrorLoc', sourceErrorLoc = $$props.sourceErrorLoc);
		if ('runtimeErrorLoc' in $$props) $$invalidate('runtimeErrorLoc', runtimeErrorLoc = $$props.runtimeErrorLoc);
		if ('status' in $$props) $$invalidate('status', status = $$props.status);
		if ('$bundle' in $$props) bundle.set($bundle);
		if ('$components' in $$props) components.set($components);
		if ('$selected' in $$props) selected.set($selected);
		if ('$compile_options' in $$props) compile_options.set($compile_options);
	};

	$$self.$$.update = ($$dirty = { output: 1, $selected: 1, $compile_options: 1 }) => {
		if ($$dirty.output || $$dirty.$selected || $$dirty.$compile_options) { if (output && $selected) {
				output.update($selected, $compile_options);
			} }
	};

	return {
		workersUrl,
		packagesUrl,
		svelteUrl,
		embedded,
		orientation,
		relaxed,
		fixed,
		fixedPos,
		injectedJS,
		injectedCSS,
		toJSON,
		set,
		update,
		components,
		selected,
		bundle,
		compile_options,
		handle_select,
		input,
		sourceErrorLoc,
		runtimeErrorLoc,
		status,
		moduleeditor_binding
	};
}

class Repl extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$8, create_fragment$8, safe_not_equal, ["workersUrl", "packagesUrl", "svelteUrl", "embedded", "orientation", "relaxed", "fixed", "fixedPos", "injectedJS", "injectedCSS", "toJSON", "set", "update"]);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "Repl", options, id: create_fragment$8.name });

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.workersUrl === undefined && !('workersUrl' in props)) {
			console.warn("<Repl> was created without expected prop 'workersUrl'");
		}
		if (ctx.toJSON === undefined && !('toJSON' in props)) {
			console.warn("<Repl> was created without expected prop 'toJSON'");
		}
		if (ctx.set === undefined && !('set' in props)) {
			console.warn("<Repl> was created without expected prop 'set'");
		}
		if (ctx.update === undefined && !('update' in props)) {
			console.warn("<Repl> was created without expected prop 'update'");
		}
	}

	get workersUrl() {
		throw new Error_1("<Repl>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set workersUrl(value) {
		throw new Error_1("<Repl>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get packagesUrl() {
		throw new Error_1("<Repl>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set packagesUrl(value) {
		throw new Error_1("<Repl>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get svelteUrl() {
		throw new Error_1("<Repl>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set svelteUrl(value) {
		throw new Error_1("<Repl>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get embedded() {
		throw new Error_1("<Repl>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set embedded(value) {
		throw new Error_1("<Repl>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get orientation() {
		throw new Error_1("<Repl>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set orientation(value) {
		throw new Error_1("<Repl>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get relaxed() {
		throw new Error_1("<Repl>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set relaxed(value) {
		throw new Error_1("<Repl>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get fixed() {
		throw new Error_1("<Repl>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set fixed(value) {
		throw new Error_1("<Repl>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get fixedPos() {
		throw new Error_1("<Repl>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set fixedPos(value) {
		throw new Error_1("<Repl>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get injectedJS() {
		throw new Error_1("<Repl>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set injectedJS(value) {
		throw new Error_1("<Repl>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get injectedCSS() {
		throw new Error_1("<Repl>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set injectedCSS(value) {
		throw new Error_1("<Repl>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get toJSON() {
		return this.$$.ctx.toJSON;
	}

	set toJSON(value) {
		throw new Error_1("<Repl>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get set() {
		return this.$$.ctx.set;
	}

	set set(value) {
		throw new Error_1("<Repl>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get update() {
		return this.$$.ctx.update;
	}

	set update(value) {
		throw new Error_1("<Repl>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export { Repl as R };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
