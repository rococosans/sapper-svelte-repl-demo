import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, O as onMount, e as globals, A as mount_component, t as transition_in, b as transition_out, D as destroy_component, H as binding_callbacks, a0 as bind, h as element, f as space, k as claim_element, l as children, m as detach_dev, j as claim_space, o as attr_dev, J as toggle_class, p as add_location, K as add_render_callback, q as insert_dev, v as append_dev, Q as add_resize_listener, E as group_outros, F as check_outros, a1 as add_flush_callback } from './index.121aa0ed.js';
import { R as Repl } from './Repl.d20fb43b.js';
import { p as process_example } from './examples.83e383fd.js';
import { I as InputOutputToggle } from './InputOutputToggle.cf880272.js';

/* src\components\Repl\ReplWidget.svelte generated by Svelte v3.12.0 */
const { Object: Object_1 } = globals;

const file = "src\\components\\Repl\\ReplWidget.svelte";

// (116:2) {#if true}
function create_if_block_1(ctx) {
	var current;

	let repl_1_props = {
		workersUrl: "workers",
		fixed: ctx.mobile,
		svelteUrl: ctx.svelteUrl,
		rollupUrl: ctx.rollupUrl,
		embedded: true,
		relaxed: true
	};
	var repl_1 = new Repl({ props: repl_1_props, $$inline: true });

	ctx.repl_1_binding(repl_1);

	const block = {
		c: function create() {
			repl_1.$$.fragment.c();
		},

		l: function claim(nodes) {
			repl_1.$$.fragment.l(nodes);
		},

		m: function mount(target, anchor) {
			mount_component(repl_1, target, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var repl_1_changes = {};
			if (changed.mobile) repl_1_changes.fixed = ctx.mobile;
			if (changed.svelteUrl) repl_1_changes.svelteUrl = ctx.svelteUrl;
			repl_1.$set(repl_1_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(repl_1.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(repl_1.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			ctx.repl_1_binding(null);

			destroy_component(repl_1, detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block_1.name, type: "if", source: "(116:2) {#if true}", ctx });
	return block;
}

// (129:1) {#if mobile}
function create_if_block(ctx) {
	var updating_checked, current;

	function inputoutputtoggle_checked_binding(value) {
		ctx.inputoutputtoggle_checked_binding.call(null, value);
		updating_checked = true;
		add_flush_callback(() => updating_checked = false);
	}

	let inputoutputtoggle_props = {};
	if (ctx.checked !== void 0) {
		inputoutputtoggle_props.checked = ctx.checked;
	}
	var inputoutputtoggle = new InputOutputToggle({
		props: inputoutputtoggle_props,
		$$inline: true
	});

	binding_callbacks.push(() => bind(inputoutputtoggle, 'checked', inputoutputtoggle_checked_binding));

	const block = {
		c: function create() {
			inputoutputtoggle.$$.fragment.c();
		},

		l: function claim(nodes) {
			inputoutputtoggle.$$.fragment.l(nodes);
		},

		m: function mount(target, anchor) {
			mount_component(inputoutputtoggle, target, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var inputoutputtoggle_changes = {};
			if (!updating_checked && changed.checked) {
				inputoutputtoggle_changes.checked = ctx.checked;
			}
			inputoutputtoggle.$set(inputoutputtoggle_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(inputoutputtoggle.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(inputoutputtoggle.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			destroy_component(inputoutputtoggle, detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_if_block.name, type: "if", source: "(129:1) {#if mobile}", ctx });
	return block;
}

function create_fragment(ctx) {
	var div1, div0, t, div1_resize_listener, current;

	var if_block0 =  create_if_block_1(ctx);

	var if_block1 = (ctx.mobile) && create_if_block(ctx);

	const block = {
		c: function create() {
			div1 = element("div");
			div0 = element("div");
			if (if_block0) if_block0.c();
			t = space();
			if (if_block1) if_block1.c();
			this.h();
		},

		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true }, false);
			var div1_nodes = children(div1);

			div0 = claim_element(div1_nodes, "DIV", { class: true }, false);
			var div0_nodes = children(div0);

			if (if_block0) if_block0.l(div0_nodes);
			div0_nodes.forEach(detach_dev);
			t = claim_space(div1_nodes);
			if (if_block1) if_block1.l(div1_nodes);
			div1_nodes.forEach(detach_dev);
			this.h();
		},

		h: function hydrate() {
			attr_dev(div0, "class", "viewport svelte-1c57uyk");
			toggle_class(div0, "offset", ctx.checked);
			add_location(div0, file, 114, 1, 2440);
			add_render_callback(() => ctx.div1_resize_handler.call(div1));
			attr_dev(div1, "class", "repl-outer svelte-1c57uyk");
			toggle_class(div1, "mobile", ctx.mobile);
			add_location(div1, file, 113, 0, 2376);
		},

		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, div0);
			if (if_block0) if_block0.m(div0, null);
			append_dev(div1, t);
			if (if_block1) if_block1.m(div1, null);
			div1_resize_listener = add_resize_listener(div1, ctx.div1_resize_handler.bind(div1));
			current = true;
		},

		p: function update(changed, ctx) {
			if_block0.p(changed, ctx);

			if (changed.checked) {
				toggle_class(div0, "offset", ctx.checked);
			}

			if (ctx.mobile) {
				if (if_block1) {
					if_block1.p(changed, ctx);
					transition_in(if_block1, 1);
				} else {
					if_block1 = create_if_block(ctx);
					if_block1.c();
					transition_in(if_block1, 1);
					if_block1.m(div1, null);
				}
			} else if (if_block1) {
				group_outros();
				transition_out(if_block1, 1, 1, () => {
					if_block1 = null;
				});
				check_outros();
			}

			if (changed.mobile) {
				toggle_class(div1, "mobile", ctx.mobile);
			}
		},

		i: function intro(local) {
			if (current) return;
			transition_in(if_block0);
			transition_in(if_block1);
			current = true;
		},

		o: function outro(local) {
			transition_out(if_block0);
			transition_out(if_block1);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(div1);
			}

			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
			div1_resize_listener.cancel();
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment.name, type: "component", source: "", ctx });
	return block;
}

function instance($$self, $$props, $$invalidate) {
	

	let { version = '3', gist = null, example = null, embedded = false } = $$props;

	let repl;
	let name = 'loading...';
	let width =  window.innerWidth - 32
		;

	let checked = false;

	onMount(() => {
		if (version !== 'local') {
			fetch(`https://unpkg.com/svelte@${version}/package.json`)
				.then(r => r.json())
				.then(pkg => {
					$$invalidate('version', version = pkg.version);
				});
		}

		if (gist) {
			fetch(`repl/${gist}.json`).then(r => r.json()).then(data => {
				const { description, files } = data;

				$$invalidate('name', name = description);

				const components = Object.keys(files)
					.map(file => {
						const dot = file.lastIndexOf('.');
						if (!~dot) return;

						const source = files[file].content;

						return {
							name: file.slice(0, dot),
							type: file.slice(dot + 1),
							source
						};
					})
					.filter(x => x.type === 'svelte' || x.type === 'js')
					.sort((a, b) => {
						if (a.name === 'App' && a.type === 'svelte') return -1;
						if (b.name === 'App' && b.type === 'svelte') return 1;

						if (a.type !== b.type) return a.type === 'svelte' ? -1 : 1;

						return a.name < b.name ? -1 : 1;
					});

				repl.set({ components });
			});
		} else if (example) {
			fetch(`examples/${example}.json`).then(async response => {
				if (response.ok) {
					const data = await response.json();

					repl.set({
						components: process_example(data.files)
					});
				}
			});
		}
	});

	const rollupUrl = `https://unpkg.com/rollup@1/dist/rollup.browser.js`;

	const writable_props = ['version', 'gist', 'example', 'embedded'];
	Object_1.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<ReplWidget> was created with unknown prop '${key}'`);
	});

	function repl_1_binding($$value) {
		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
			$$invalidate('repl', repl = $$value);
		});
	}

	function inputoutputtoggle_checked_binding(value) {
		checked = value;
		$$invalidate('checked', checked);
	}

	function div1_resize_handler() {
		width = this.clientWidth;
		$$invalidate('width', width);
	}

	$$self.$set = $$props => {
		if ('version' in $$props) $$invalidate('version', version = $$props.version);
		if ('gist' in $$props) $$invalidate('gist', gist = $$props.gist);
		if ('example' in $$props) $$invalidate('example', example = $$props.example);
		if ('embedded' in $$props) $$invalidate('embedded', embedded = $$props.embedded);
	};

	$$self.$capture_state = () => {
		return { version, gist, example, embedded, repl, name, width, checked, svelteUrl, mobile };
	};

	$$self.$inject_state = $$props => {
		if ('version' in $$props) $$invalidate('version', version = $$props.version);
		if ('gist' in $$props) $$invalidate('gist', gist = $$props.gist);
		if ('example' in $$props) $$invalidate('example', example = $$props.example);
		if ('embedded' in $$props) $$invalidate('embedded', embedded = $$props.embedded);
		if ('repl' in $$props) $$invalidate('repl', repl = $$props.repl);
		if ('name' in $$props) $$invalidate('name', name = $$props.name);
		if ('width' in $$props) $$invalidate('width', width = $$props.width);
		if ('checked' in $$props) $$invalidate('checked', checked = $$props.checked);
		if ('svelteUrl' in $$props) $$invalidate('svelteUrl', svelteUrl = $$props.svelteUrl);
		if ('mobile' in $$props) $$invalidate('mobile', mobile = $$props.mobile);
	};

	let svelteUrl, mobile;

	$$self.$$.update = ($$dirty = { embedded: 1, name: 1, version: 1, width: 1 }) => {
		if ($$dirty.embedded || $$dirty.name) { if (embedded) document.title = `${name} • Svelte REPL`; }
		if ($$dirty.version) { $$invalidate('svelteUrl', svelteUrl =  version === 'local' ?
				`${location.origin}/repl/local` :
				`https://unpkg.com/svelte@${version}`); }
		if ($$dirty.width) { $$invalidate('mobile', mobile = width < 560); }
	};

	return {
		version,
		gist,
		example,
		embedded,
		repl,
		width,
		checked,
		rollupUrl,
		svelteUrl,
		mobile,
		repl_1_binding,
		inputoutputtoggle_checked_binding,
		div1_resize_handler
	};
}

class ReplWidget extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, ["version", "gist", "example", "embedded"]);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "ReplWidget", options, id: create_fragment.name });
	}

	get version() {
		throw new Error("<ReplWidget>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set version(value) {
		throw new Error("<ReplWidget>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get gist() {
		throw new Error("<ReplWidget>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set gist(value) {
		throw new Error("<ReplWidget>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get example() {
		throw new Error("<ReplWidget>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set example(value) {
		throw new Error("<ReplWidget>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get embedded() {
		throw new Error("<ReplWidget>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set embedded(value) {
		throw new Error("<ReplWidget>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export { ReplWidget as R };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
