.user.svelte-1jk26jo{position:relative;display:inline-block;padding:0em 1.2rem 0 1.6rem;height:0.8em;line-height:1;z-index:99}.user.svelte-1jk26jo::after{position:absolute;content:'';width:100%;height:3.2rem;left:0;top:0}span.svelte-1jk26jo{line-height:1;display:none;font-family:var(--font);font-size:1.6rem;opacity:0.7}.user.svelte-1jk26jo:hover span.svelte-1jk26jo{opacity:1}img.svelte-1jk26jo{position:absolute;top:-0.05em;right:0;width:2.1rem;height:2.1rem;border:1px solid rgba(255,255,255,0.3);border-radius:0.2rem}.menu.svelte-1jk26jo{position:absolute;width:calc(100% + 1.6rem);min-width:10em;top:3rem;right:-1.6rem;background-color:var(--second);padding:0.8rem 1.6rem;z-index:99;text-align:left;border-radius:0.4rem;display:flex;flex-direction:column}.menu.svelte-1jk26jo button.svelte-1jk26jo,.menu.svelte-1jk26jo a.svelte-1jk26jo{background-color:transparent;font-family:var(--font);font-size:1.6rem;opacity:0.7;padding:0.4rem 0;text-decoration:none;text-align:left;border:none;color:inherit}.menu.svelte-1jk26jo button.svelte-1jk26jo:hover,.menu.svelte-1jk26jo a.svelte-1jk26jo:hover{opacity:1;color:inherit}@media(min-width: 600px){.user.svelte-1jk26jo{padding:0em 3.2rem 0 1.6rem}img.svelte-1jk26jo{width:2.4rem;height:2.4rem}span.svelte-1jk26jo{display:inline-block}}
.app-controls.svelte-8qtwr5{position:absolute;top:0;left:0;width:100%;height:var(--app-controls-h);display:flex;align-items:center;justify-content:space-between;padding:.6rem var(--side-nav);background-color:var(--second);color:white}.icon.svelte-8qtwr5{position:relative;top:-0.1rem;display:inline-block;padding:0.2em;opacity:.7;transition:opacity .3s;font-family:var(--font);font-size:1.6rem;color:white;line-height:1;margin:0 0 0 0.2em}.icon.svelte-8qtwr5:hover{opacity:1 }.icon.svelte-8qtwr5:disabled{opacity:.3 }.icon[title^='fullscreen'].svelte-8qtwr5{display:none }input.svelte-8qtwr5{background:transparent;border:none;color:currentColor;font-family:var(--font);font-size:1.6rem;opacity:0.7;outline:none;flex:1}input.svelte-8qtwr5:focus{opacity:1}button.svelte-8qtwr5 span.svelte-8qtwr5{display:none}@media(min-width: 600px){.icon[title^='fullscreen'].svelte-8qtwr5{display:inline }button.svelte-8qtwr5 span.svelte-8qtwr5{display:inline-block}}
.repl-outer.svelte-95x48y{position:relative;height:calc(100vh - var(--nav-h));--app-controls-h:5.6rem;--pane-controls-h:4.2rem;overflow:hidden;background-color:var(--back);padding:var(--app-controls-h) 0 0 0;box-sizing:border-box}.viewport.svelte-95x48y{width:100%;height:100%}.mobile.svelte-95x48y .viewport.svelte-95x48y{width:200%;height:calc(100% - 42px);transition:transform 0.3s}.mobile.svelte-95x48y .offset.svelte-95x48y{transform:translate(-50%, 0)}.viewport.svelte-95x48y .tab-content,.viewport.svelte-95x48y .tab-content.visible{pointer-events:all;opacity:1}.viewport.svelte-95x48y .tab-content{visibility:hidden}.viewport.svelte-95x48y .tab-content.visible{visibility:visible}.zen-mode.svelte-95x48y{position:fixed;width:100%;height:100%;top:0;z-index:111}.pane.svelte-95x48y{width:100%;height:100% }.loading.svelte-95x48y{text-align:center;color:var(--second);font-weight:400;margin:2em 0 0 0;opacity:0;animation:svelte-95x48y-fade-in .4s;animation-delay:.2s;animation-fill-mode:both}@keyframes svelte-95x48y-fade-in{0%{opacity:0 }100%{opacity:1 }}.input.svelte-95x48y{padding:2.4em 0 0 0}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */